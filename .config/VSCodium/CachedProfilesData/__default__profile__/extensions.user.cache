{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/arjuntina/.vscode-oss/extensions/extensions.json","path":"/home/arjuntina/.vscode-oss/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1692127004945,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.81.1","productDate":"2023-08-11T22:05:37.316Z","productCommit":"aef377c42cea6e9aea642829953104f07097abfa","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"shan.code-settings-sync","uuid":"e337c67b-55c2-4fef-8949-eb260e7fb7fd"},"manifest":{"name":"code-settings-sync","displayName":"Settings Sync","description":"Synchronize Settings, Snippets, Themes, File Icons, Launch, Keybindings, Workspaces and Extensions Across Multiple Machines Using GitHub Gist.","version":"3.4.3","icon":"images/logo-128.png","publisher":"Shan","author":{"name":"Shan Khan","url":"http://shanalikhan.github.io","email":"shanalikhan@hotmail.com"},"homepage":"https://shanalikhan.github.io","galleryBanner":{"color":"#3B4859","theme":"dark"},"engines":{"vscode":"^1.35.1"},"badges":[{"url":"https://vsmarketplacebadge.apphb.com/version/Shan.code-settings-sync.svg","description":"Latest Version","href":"https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync"},{"url":"https://vsmarketplacebadge.apphb.com/installs/Shan.code-settings-sync.svg","description":"Total Downloads","href":"https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync"},{"url":"https://vsmarketplacebadge.apphb.com/rating/Shan.code-settings-sync.svg","description":"Ratings","href":"https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync"},{"url":"https://img.shields.io/badge/Join%20Community-slack-green.svg","description":"Join Slack Community","href":"https://join.slack.com/t/codesettingssync/shared_invite/enQtNzQyODMzMzI5MDQ3LWNmZjVkZjE2YTg0MzY1Y2EyYzVmYThmNzg2YjZkNjhhZWY3ZTEzN2I3ZTAxMjkwNWU0ZjMyZGFhMjdiZDI3ODU"}],"repository":{"type":"git","url":"https://github.com/shanalikhan/code-settings-sync.git"},"bugs":{"url":"https://github.com/shanalikhan/code-settings-sync/issues","email":"shanalikhan@hotmail.com"},"categories":["Other"],"keywords":["vscode-sync","vscode-settings-sync","code-settings-sync","settings-sync","workspace-sync","multi-root ready"],"extensionKind":"ui","activationEvents":["*"],"main":"./out/extension.js","contributes":{"commands":[{"command":"extension.HowSettings","title":"Sync: How To Configure"},{"command":"extension.downloadSettings","title":"Sync: Download Settings"},{"command":"extension.updateSettings","title":"Sync: Update/Upload Settings"},{"command":"extension.resetSettings","title":"Sync: Reset Extension Settings"},{"command":"extension.otherOptions","title":"Sync: Advanced Options"}],"keybindings":[{"key":"alt+shift+u","command":"extension.updateSettings"},{"key":"alt+shift+d","command":"extension.downloadSettings"}],"configuration":{"properties":{"sync.gist":{"type":"string","default":"","description":"GitHub GIST ID for Settings Sync."},"sync.autoDownload":{"type":"boolean","default":false,"description":"Set it true to Auto Download the settings on code start. [Code Restart Required]"},"sync.autoUpload":{"type":"boolean","default":false,"description":"Set it true to Auto Upload on the settings change. [Code Restart Required]"},"sync.forceDownload":{"type":"boolean","default":false,"description":"Set it to true if you want to download the settings even when you have the latest settings."},"sync.forceUpload":{"type":"boolean","default":false,"description":"Set it to true if you want to upload the settings even when the GIST has newer settings."},"sync.quietSync":{"type":"boolean","default":false,"description":"When set to true, will show the result in status bar instead of summary page."},"sync.removeExtensions":{"type":"boolean","default":true,"description":"Set it to false if you don't want to remove extensions while downloading."},"sync.syncExtensions":{"type":"boolean","default":true,"description":"Set it to false if you don't want to upload/download the extensions."}},"title":"Code Settings Sync Configuration Settings"}},"scripts":{"vscode:prepublish":"npm run tslint-check && webpack --config configs/webpack.production.config.js","compile":"webpack --config configs/webpack.development.config.js","watch":"webpack --config configs/webpack.development.config.js --watch","postinstall":"node ./node_modules/vscode/bin/install","tslint-check":"tslint -c ./tslint.json ./src/**/*.ts ./src/*.ts","format":"prettier --write './src/**/*.ts'","test":"npm run tslint-check && tsc -p ./ && mocha --recursive \"./out/test/**/*.js\""},"devDependencies":{"@types/chai":"4.2.1","@types/express":"^4.16.1","@types/lodash":"^4.14.123","@types/node-fetch":"^2.3.3","@types/fs-extra":"^8.0.0","@types/mocha":"^5.2.6","@types/node":"^12.0.9","@types/recursive-readdir":"^2.2.0","chai":"^4.2.0","clean-webpack-plugin":"^3.0.0","mocha":"^6.0.2","prettier":"^1.16.4","ts-loader":"^5.3.3","tslint":"^5.15.0","tslint-plugin-prettier":"^2.0.1","typescript":"^3.4.1","vscode":"^1.1.33","webpack":"^4.29.6","webpack-cli":"^3.3.0","webpack-merge":"^4.2.1"},"dependencies":{"@octokit/rest":"^16.23.2","adm-zip":"^0.4.13","const":"^1.0.0","express":"^4.16.4","fs-extra":"^8.0.1","https-proxy-agent":"^2.2.1","lockfile":"^1.0.4","lodash":"^4.17.15","node-fetch":"^2.5.0","recursive-readdir":"^2.2.2","temp":"^0.9.0","vscode-chokidar":"^2.1.6"}},"location":{"$mid":1,"path":"/home/arjuntina/.vscode-oss/extensions/shan.code-settings-sync-3.4.3-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"e337c67b-55c2-4fef-8949-eb260e7fb7fd","publisherId":"ac3a3342-db76-40ef-9277-4657632d3bfe","publisherDisplayName":"Shan","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1692126713238,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"catppuccin.catppuccin-vsc-icons","uuid":"c84e505c-f415-4102-b952-53cb6f0bdf10"},"manifest":{"publisher":"Catppuccin","name":"catppuccin-vsc-icons","displayName":"Catppuccin Icons for VSCode","type":"module","version":"0.26.0","description":"🦌 Soothing pastel icon theme for VSCode","author":"prazdevs","license":"MIT","repository":{"type":"git","url":"https://github.com/catppuccin/vscode-icons"},"keywords":["catppuccin","theme","fancy","pastel-colors","vscode","vscode-theme","vscode-icons","vscode-extension"],"categories":["Themes"],"icon":"logo.png","files":["dist"],"engines":{"vscode":"^1.69.0"},"contributes":{"iconThemes":[{"id":"catppuccin-mocha","label":"Catppuccin Mocha","path":"themes/mocha/theme.json"},{"id":"catppuccin-latte","label":"Catppuccin Latte","path":"themes/latte/theme.json"},{"id":"catppuccin-frappe","label":"Catppuccin Frappé","path":"themes/frappe/theme.json"},{"id":"catppuccin-macchiato","label":"Catppuccin Macchiato","path":"themes/macchiato/theme.json"}]},"scripts":{"build":"yarn build:themes && yarn build:preview","build:icons":"tsx scripts/icons.ts","build:themes":"tsx scripts/themes.ts","build:preview":"tsx scripts/preview.ts","catwalk":"tsx scripts/catwalk.ts","dev":"chokidar \"src/**/*\" -c \"yarn build\"","integrity":"tsx scripts/integrity.ts","lint":"eslint .","lint:fix":"eslint . --fix","package":"vsce package --no-dependencies -o dist","release":"bumpp -t \"v%s\" -c \"chore: release v\""},"devDependencies":{"@antfu/eslint-config":"^0.38.6","@catppuccin/palette":"^0.1.8","@types/fs-extra":"^11.0.1","@types/node":"^18.16.5","@vscode/vsce":"^2.19.0","bumpp":"^9.1.0","chokidar-cli":"^3.0.0","colorsea":"^1.2.1","consola":"^3.1.0","eslint":"^8.40.0","fs-extra":"^11.1.1","pathe":"^1.1.0","puppeteer":"^20.1.2","scule":"^1.0.0","svgo":"^3.0.2","tsx":"^3.12.7","typescript":"^5.0.4"}},"location":{"$mid":1,"path":"/home/arjuntina/.vscode-oss/extensions/catppuccin.catppuccin-vsc-icons-0.26.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"c84e505c-f415-4102-b952-53cb6f0bdf10","publisherId":"e7d2ed61-53e0-4dd4-afbe-f536c3bb4316","publisherDisplayName":"Catppuccin","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1692126891733},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"justusadam.language-haskell","uuid":"270c1d3b-a657-446f-83b8-ab32fd7af006"},"manifest":{"name":"language-haskell","displayName":"Haskell Syntax Highlighting","description":"Syntax support for the Haskell programming language.","version":"3.6.0","publisher":"justusadam","engines":{"vscode":"^1.0.0"},"icon":"images/logo.png","galleryBanner":{"color":"#293845","theme":"dark"},"files":["src/*","syntaxes/*.json","images/","README.md","LICENSE","*-configuration.json","tsconfig.json","CHANGELOG.md"],"keywords":["language","haskell","highlight","syntax"],"license":"BSD-3-Clause","homepage":"https://github.com/JustusAdam/language-haskell","repository":{"type":"git","url":"https://github.com/JustusAdam/language-haskell.git"},"bugs":{"url":"https://github.com/JustusAdam/language-haskell/issues","email":"dev@justus.science"},"categories":["Programming Languages"],"activationEvents":["onLanguage:haskell"],"main":"./out/src/extension","contributes":{"configuration":{"type":"object","title":"Haskell configuration","properties":{"haskell.indentationRules.enabled":{"type":"boolean","default":true,"description":"Set to 'false' to disable automatically increasing indent on newlines after '=', 'do', 'where' etc."}}},"languages":[{"id":"haskell","aliases":["Haskell","haskell"],"extensions":[".hs",".hsig","hs-boot"],"configuration":"./haskell-configuration.json"},{"id":"cabal","aliases":["Cabal","cabal"],"extensions":[".cabal"],"configuration":"./cabal-configuration.json"},{"id":"C2Hs","aliases":["C2Hs","c2hs"],"extensions":[".chs"],"configuration":"./C2Hs-configuration.json"},{"id":"Hsc2Hs","aliases":["Hsc2Hs","HsC2Hs","hsc2hs"],"extensions":[".hsc"],"configuration":"./Hsc2Hs-configuration.json"},{"id":"literate haskell","aliases":["Literate Haskell","literate Haskell"],"extensions":[".lhs"],"configuration":"./literate-haskell-configuration.json"},{"id":"yaml","aliases":["YAML","yaml"],"filenames":["stack.yaml.lock"]},{"id":"alex","aliases":["Alex","alex","Haskell Alex"],"extensions":[".x"],"configuration":"./haskell-configuration.json"},{"id":"happy","aliases":["Happy","happy","Haskell Happy"],"extensions":[".y"],"configuration":"./haskell-configuration.json"}],"grammars":[{"language":"haskell","scopeName":"source.haskell","path":"./syntaxes/haskell.json"},{"language":"cabal","scopeName":"source.cabal","path":"./syntaxes/cabal.json"},{"language":"C2Hs","scopeName":"source.c2hs","path":"./syntaxes/C2Hs.json"},{"language":"Hsc2Hs","scopeName":"source.hsc","path":"./syntaxes/Hsc2Hs.json"},{"language":"literate haskell","scopeName":"text.tex.latex.haskell","path":"./syntaxes/literateHaskell.json"},{"language":"alex","scopeName":"source.haskell.alex","path":"./syntaxes/alex.json"},{"language":"happy","scopeName":"source.haskell.happy","path":"./syntaxes/happy.json"},{"scopeName":"markdown.haskell.codeblock","path":"./syntaxes/codeblock-haskell.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.haskell":"haskell"}},{"scopeName":"markdown.lhaskell.codeblock","path":"./syntaxes/codeblock-literate-haskell.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.lhaskell":"lhaskell"}},{"scopeName":"markdown.cabal.codeblock","path":"./syntaxes/codeblock-cabal.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.cabal":"cabal"}}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"js-yaml":"^3.13.1","npm":"^6.14.5","typescript":"^2.6.2","vsce":"^1.75.0","vscode":"^1.0.0"}},"location":{"$mid":1,"path":"/home/arjuntina/.vscode-oss/extensions/justusadam.language-haskell-3.6.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"270c1d3b-a657-446f-83b8-ab32fd7af006","publisherId":"2c93d4f5-4858-4c44-9577-e3790e9f20cf","publisherDisplayName":"justusadam","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1692126894420},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"haskell.haskell","uuid":"aead9e6c-3483-4ce4-a09f-843e25ce696f"},"manifest":{"name":"haskell","displayName":"Haskell","description":"Haskell language support powered by the Haskell Language Server","version":"2.4.1","license":"MIT","publisher":"haskell","engines":{"vscode":"^1.80.0"},"keywords":["language","haskell","cabal","stack","lsp","multi-root ready"],"homepage":"https://github.com/haskell/vscode-haskell","repository":"https://github.com/haskell/vscode-haskell.git","bugs":{"url":"https://github.com/haskell/vscode-haskell/issues"},"categories":["Programming Languages","Formatters","Linters","Other"],"icon":"images/hls-logo.png","galleryBanner":{"color":"#22172A","theme":"dark"},"activationEvents":["onLanguage:haskell","onLanguage:literate haskell"],"main":"./dist/extension","contributes":{"languages":[{"id":"haskell","aliases":["Haskell","haskell"],"extensions":[".hs"]},{"id":"literate haskell","aliases":["Literate Haskell","literate Haskell"],"extensions":[".lhs"]}],"configuration":{"type":"object","title":"Haskell","properties":{"haskell.formattingProvider":{"scope":"resource","type":"string","enum":["brittany","floskell","fourmolu","ormolu","stylish-haskell","none"],"default":"ormolu","description":"The formatter to use when formatting a document or range. Ensure the plugin is enabled."},"haskell.openDocumentationInHackage":{"scope":"resource","type":"boolean","default":true,"description":"When opening 'Documentation' for external libraries, open in hackage by default. Set to false to instead open in vscode."},"haskell.openSourceInHackage":{"scope":"resource","type":"boolean","default":true,"description":"When opening 'Source' for external libraries, open in hackage by default. Set to false to instead open in vscode."},"haskell.trace.server":{"scope":"resource","type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the language server."},"haskell.trace.client":{"scope":"resource","type":"string","enum":["off","error","info","debug"],"default":"info","description":"Sets the log level in the client side."},"haskell.logFile":{"scope":"resource","type":"string","default":"","description":"If set, redirects the logs to a file."},"haskell.releasesURL":{"scope":"resource","type":"string","default":"","description":"An optional URL to override where ghcup checks for HLS-GHC compatibility list (usually at: https://raw.githubusercontent.com/haskell/ghcup-metadata/master/hls-metadata-0.0.1.json)"},"haskell.metadataURL":{"scope":"resource","type":"string","default":"","description":"An optional URL to override where ghcup checks for tool download info (usually at: https://raw.githubusercontent.com/haskell/ghcup-metadata/master/ghcup-0.0.7.yaml)"},"haskell.releasesDownloadStoragePath":{"scope":"resource","type":"string","default":"","markdownDescription":"An optional path where downloaded metadata will be stored. Check the default value [here](https://github.com/haskell/vscode-haskell#downloaded-binaries)"},"haskell.serverExecutablePath":{"scope":"machine-overridable","type":"string","default":"","markdownDescription":"Manually set a language server executable. Can be something on the $PATH or the full path to the executable itself. Works with `~,` `${HOME}` and `${workspaceFolder}`."},"haskell.serverExtraArgs":{"scope":"resource","type":"string","default":"","markdownDescription":"Pass additional arguments to the language server."},"haskell.ghcupExecutablePath":{"scope":"resource","type":"string","default":"","markdownDescription":"Manually set a ghcup executable path."},"haskell.serverEnvironment":{"scope":"resource","type":"object","default":{},"markdownDescription":"Define environment variables for the language server."},"haskell.promptBeforeDownloads":{"scope":"machine","type":"boolean","default":"true","markdownDescription":"Prompt before performing any downloads."},"haskell.manageHLS":{"scope":"resource","type":"string","default":"PATH","description":"How to manage/find HLS installations.","enum":["GHCup","PATH"],"enumDescriptions":["Will use ghcup and manage Haskell toolchain in the default location (usually '~/.ghcup')","Discovers HLS and other executables in system PATH"]},"haskell.toolchain":{"scope":"resource","type":"object","default":{},"description":"When manageHLS is set to GHCup, this can overwrite the automatic toolchain configuration with a more specific one. When a tool is omitted, the extension will manage the version (for 'ghc' we try to figure out the version the project requires). The format is '{\"tool\": \"version\", ...}'. 'version' accepts all identifiers that 'ghcup' accepts."},"haskell.upgradeGHCup":{"scope":"resource","type":"boolean","default":true,"description":"Whether to upgrade GHCup automatically when 'manageHLS' is set to 'GHCup'."},"haskell.checkProject":{"scope":"resource","type":"boolean","default":true,"description":"Whether to typecheck the entire project on load. It could drive to bad performance in large projects."},"haskell.maxCompletions":{"scope":"resource","default":40,"type":"integer","description":"Maximum number of completions sent to the editor."},"haskell.plugin.alternateNumberFormat.globalOn":{"default":true,"description":"Enables alternateNumberFormat plugin","scope":"resource","type":"boolean"},"haskell.plugin.cabal.globalOn":{"default":true,"description":"Enables cabal plugin","scope":"resource","type":"boolean"},"haskell.plugin.callHierarchy.globalOn":{"default":true,"description":"Enables callHierarchy plugin","scope":"resource","type":"boolean"},"haskell.plugin.changeTypeSignature.globalOn":{"default":true,"description":"Enables changeTypeSignature plugin","scope":"resource","type":"boolean"},"haskell.plugin.class.codeActionsOn":{"default":true,"description":"Enables class code actions","scope":"resource","type":"boolean"},"haskell.plugin.class.codeLensOn":{"default":true,"description":"Enables class code lenses","scope":"resource","type":"boolean"},"haskell.plugin.eval.config.diff":{"default":true,"markdownDescription":"Enable the diff output (WAS/NOW) of eval lenses","scope":"resource","type":"boolean"},"haskell.plugin.eval.config.exception":{"default":false,"markdownDescription":"Enable marking exceptions with `*** Exception:` similarly to doctest and GHCi.","scope":"resource","type":"boolean"},"haskell.plugin.eval.globalOn":{"default":true,"description":"Enables eval plugin","scope":"resource","type":"boolean"},"haskell.plugin.explicit-fields.globalOn":{"default":true,"description":"Enables explicit-fields plugin","scope":"resource","type":"boolean"},"haskell.plugin.explicit-fixity.globalOn":{"default":true,"description":"Enables explicit-fixity plugin","scope":"resource","type":"boolean"},"haskell.plugin.fourmolu.config.external":{"default":false,"markdownDescription":"Call out to an external \"fourmolu\" executable, rather than using the bundled library","scope":"resource","type":"boolean"},"haskell.plugin.gadt.globalOn":{"default":true,"description":"Enables gadt plugin","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-code-actions-bindings.globalOn":{"default":true,"description":"Enables ghcide-code-actions-bindings plugin","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-code-actions-fill-holes.globalOn":{"default":true,"description":"Enables ghcide-code-actions-fill-holes plugin","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-code-actions-imports-exports.globalOn":{"default":true,"description":"Enables ghcide-code-actions-imports-exports plugin","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-code-actions-type-signatures.globalOn":{"default":true,"description":"Enables ghcide-code-actions-type-signatures plugin","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-completions.config.autoExtendOn":{"default":true,"markdownDescription":"Extends the import list automatically when completing a out-of-scope identifier","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-completions.config.snippetsOn":{"default":true,"markdownDescription":"Inserts snippets when using code completions","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-completions.globalOn":{"default":true,"description":"Enables ghcide-completions plugin","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-hover-and-symbols.hoverOn":{"default":true,"description":"Enables ghcide-hover-and-symbols hover","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-hover-and-symbols.symbolsOn":{"default":true,"description":"Enables ghcide-hover-and-symbols symbols","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-type-lenses.config.mode":{"default":"always","description":"Control how type lenses are shown","enum":["always","exported","diagnostics"],"enumDescriptions":["Always displays type lenses of global bindings","Only display type lenses of exported global bindings","Follows error messages produced by GHC about missing signatures"],"scope":"resource","type":"string"},"haskell.plugin.ghcide-type-lenses.globalOn":{"default":true,"description":"Enables ghcide-type-lenses plugin","scope":"resource","type":"boolean"},"haskell.plugin.haddockComments.globalOn":{"default":true,"description":"Enables haddockComments plugin","scope":"resource","type":"boolean"},"haskell.plugin.hlint.codeActionsOn":{"default":true,"description":"Enables hlint code actions","scope":"resource","type":"boolean"},"haskell.plugin.hlint.config.flags":{"default":[],"markdownDescription":"Flags used by hlint","scope":"resource","type":"array"},"haskell.plugin.hlint.diagnosticsOn":{"default":true,"description":"Enables hlint diagnostics","scope":"resource","type":"boolean"},"haskell.plugin.importLens.codeActionsOn":{"default":true,"description":"Enables importLens code actions","scope":"resource","type":"boolean"},"haskell.plugin.importLens.codeLensOn":{"default":true,"description":"Enables importLens code lenses","scope":"resource","type":"boolean"},"haskell.plugin.moduleName.globalOn":{"default":true,"description":"Enables moduleName plugin","scope":"resource","type":"boolean"},"haskell.plugin.pragmas.codeActionsOn":{"default":true,"description":"Enables pragmas code actions","scope":"resource","type":"boolean"},"haskell.plugin.pragmas.completionOn":{"default":true,"description":"Enables pragmas completions","scope":"resource","type":"boolean"},"haskell.plugin.qualifyImportedNames.globalOn":{"default":true,"description":"Enables qualifyImportedNames plugin","scope":"resource","type":"boolean"},"haskell.plugin.refineImports.codeActionsOn":{"default":true,"description":"Enables refineImports code actions","scope":"resource","type":"boolean"},"haskell.plugin.refineImports.codeLensOn":{"default":true,"description":"Enables refineImports code lenses","scope":"resource","type":"boolean"},"haskell.plugin.rename.config.crossModule":{"default":false,"markdownDescription":"Enable experimental cross-module renaming","scope":"resource","type":"boolean"},"haskell.plugin.rename.globalOn":{"default":true,"description":"Enables rename plugin","scope":"resource","type":"boolean"},"haskell.plugin.retrie.globalOn":{"default":true,"description":"Enables retrie plugin","scope":"resource","type":"boolean"},"haskell.plugin.splice.globalOn":{"default":true,"description":"Enables splice plugin","scope":"resource","type":"boolean"},"haskell.plugin.tactics.codeActionsOn":{"default":true,"description":"Enables tactics code actions","scope":"resource","type":"boolean"},"haskell.plugin.tactics.codeLensOn":{"default":true,"description":"Enables tactics code lenses","scope":"resource","type":"boolean"},"haskell.plugin.tactics.config.auto_gas":{"default":4,"markdownDescription":"The depth of the search tree when performing \"Attempt to fill hole\". Bigger values will be able to derive more solutions, but will take exponentially more time.","scope":"resource","type":"integer"},"haskell.plugin.tactics.config.hole_severity":{"default":null,"description":"The severity to use when showing hole diagnostics. These are noisy, but some editors don't allow jumping to all severities.","enum":[1,2,3,4,null],"enumDescriptions":["error","warning","info","hint","none"],"scope":"resource","type":"string"},"haskell.plugin.tactics.config.max_use_ctor_actions":{"default":5,"markdownDescription":"Maximum number of `Use constructor <x>` code actions that can appear","scope":"resource","type":"integer"},"haskell.plugin.tactics.config.proofstate_styling":{"default":true,"markdownDescription":"Should Wingman emit styling markup when showing metaprogram proof states?","scope":"resource","type":"boolean"},"haskell.plugin.tactics.config.timeout_duration":{"default":2,"markdownDescription":"The timeout for Wingman actions, in seconds","scope":"resource","type":"integer"},"haskell.plugin.tactics.hoverOn":{"default":true,"description":"Enables tactics hover","scope":"resource","type":"boolean"}}},"commands":[{"command":"haskell.commands.importIdentifier","title":"Haskell: Import identifier","description":"Imports a function or type based on a Hoogle search"},{"command":"haskell.commands.restartServer","title":"Haskell: Restart Haskell LSP server","description":"Restart the Haskell LSP server"},{"command":"haskell.commands.startServer","title":"Haskell: Start Haskell LSP server","description":"Start the Haskell LSP server"},{"command":"haskell.commands.stopServer","title":"Haskell: Stop Haskell LSP server","description":"Stop the Haskell LSP server"}]},"scripts":{"vscode:prepublish":"webpack --mode production","webpack":"webpack --mode none","watch":"webpack --mode development --watch","lint":"eslint -c .eslintrc.json --ext .ts src","lint-fix":"eslint --fix -c .eslintrc.json --ext .ts src","push-tag":"git tag -a $npm_package_version -m \"Version $npm_package_version\" && git push origin $npm_package_version","pretest":"tsc --alwaysStrict -p ./","format":"prettier . --write","test":"node ./out/test/runTest.js"},"husky":{"hooks":{"pre-commit":"pretty-quick --staged"}},"devDependencies":{"@types/glob":"^8.1.0","@types/mocha":"^10.0.1","@types/node":"^20.4.8","@types/vscode":"^1.80.0","@types/which":"^3.0.0","@typescript-eslint/eslint-plugin":"^5.62.0","@typescript-eslint/parser":"^5.62.0","@vscode/test-electron":"^2.3.4","eslint":"^8.46.0","eslint-webpack-plugin":"^4.0.1","glob":"^10.3.3","husky":"^8.0.2","mocha":"^10.2.0","prettier":"^3.0.1","ts-loader":"^9.4.2","typescript":"^5.0.4","webpack":"^5.88.2","webpack-cli":"^5.1.1"},"extensionDependencies":["justusadam.language-haskell"],"dependencies":{"ts-pattern":"^5.0.5","vscode-languageclient":"^7.0.0","which":"^3.0.1"}},"location":{"$mid":1,"path":"/home/arjuntina/.vscode-oss/extensions/haskell.haskell-2.4.1-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"aead9e6c-3483-4ce4-a09f-843e25ce696f","publisherId":"15dd703a-8dc9-4836-8bca-956652720b1c","publisherDisplayName":"haskell","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1692126899184},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ritwickdey.liveserver","uuid":"b63c44fd-0457-4696-99e9-dbfdf70d77de"},"manifest":{"name":"LiveServer","displayName":"Live Server","description":"Launch a development local Server with live reload feature for static & dynamic pages","version":"5.7.9","publisher":"ritwickdey","author":{"name":"Ritwick Dey","email":"ritwickdey@outlook.com","url":"http://twitter.com/Dey_Ritwick"},"engines":{"vscode":"^1.51.0"},"categories":["Other"],"keywords":["html preview","live preview","live reload","svg preview","open in browser","multi-root ready"],"preview":false,"galleryBanner":{"color":"#41205f","theme":"dark"},"activationEvents":["onStartupFinished"],"main":"./out/src/extension.js","contributes":{"commands":[{"command":"extension.liveServer.goOffline","title":"Stop Live Server","category":"Live Server"},{"command":"extension.liveServer.goOnline","title":"Open with Live Server","category":"Live Server"},{"command":"extension.liveServer.changeWorkspace","title":"Change Live Server workspace","category":"Live Server"}],"keybindings":[{"command":"extension.liveServer.goOffline","key":"alt+L alt+C","when":"editorTextFocus","mac":"cmd+L cmd+C"},{"command":"extension.liveServer.goOnline","key":"alt+L alt+O","when":"editorTextFocus","mac":"cmd+L cmd+O"}],"menus":{"editor/context":[{"command":"extension.liveServer.goOnline","group":"myGrp@liveServer","when":"resourceLangId == html"},{"command":"extension.liveServer.goOffline","group":"myGrp@liveServer","when":"resourceLangId == html"},{"command":"extension.liveServer.goOnline","group":"myGrp@liveServer","when":"resourceLangId == xml"}],"explorer/context":[{"command":"extension.liveServer.goOnline","group":"navigation@-LiveServer","when":"resourceLangId == html"},{"command":"extension.liveServer.goOnline","group":"navigation@-LiveServer","when":"resourceLangId == xml"}]},"configuration":{"title":"Live Server Config","properties":{"liveServer.settings.port":{"type":["number"],"default":5500,"minimum":0,"maximum":65535,"description":"Set Custom Port Number of Live Server. Set 0 if you want random port."},"liveServer.settings.root":{"type":["string"],"default":"/","pattern":"/|/[^\\/]","description":"Set Custom root of Live Server. \nTo change root the the server to sub folder of workspace, use '/' and relative path from workspace. \nExample: /subfolder1/subfolder2"},"liveServer.settings.CustomBrowser":{"type":["string","null"],"default":null,"enum":["chrome","chrome:PrivateMode","firefox","firefox:PrivateMode","microsoft-edge","blisk",null],"description":"Specify custom browser settings for Live Server. \nBy Default it will open your default favorite browser."},"liveServer.settings.ChromeDebuggingAttachment":{"type":["boolean"],"default":false,"description":"Enable Chrome Debugging Attachment to Live Server at Debuging Port 9222.\n NOTE: You have to install 'Debugger for Chrome' \nIf the value is true, Select 'Attach to Chrome' from Debug Window to start debugging. \n\n CAUTION: If it is true, 'Launch Chrome against localhost' may not work."},"liveServer.settings.AdvanceCustomBrowserCmdLine":{"type":["string","null"],"default":null,"description":"Note: If it is not Null, It will override CustomBrowser and ChromeDebuggingAttachment settings.\n\n Examples : \nchrome --incognito --headless --remote-debugging-port=9222 \n C:\\\\Program Files\\\\Firefox Developer Edition\\\\firefox.exe --private-window"},"liveServer.settings.showOnStatusbar":{"type":"boolean","default":true,"description":"Change this to false if you don't want the button to show in the statusbar"},"liveServer.settings.NoBrowser":{"type":"boolean","default":false,"description":"If it is true live server will start without browser opened."},"liveServer.settings.ignoreFiles":{"type":"array","default":[".vscode/**","**/*.scss","**/*.sass","**/*.ts"],"description":"To ignore specific file changes"},"liveServer.settings.mount":{"type":"array","items":{"type":"array","minItems":2,"maxItems":2,"items":{"type":"string"}},"default":[],"description":"Mount a directory to a route. Such as [['/components', './node_modules']]"},"liveServer.settings.donotShowInfoMsg":{"type":"boolean","default":false,"description":"To disable information pop up messages."},"liveServer.settings.donotVerifyTags":{"type":"boolean","default":false,"description":"To turn off prompt warning message if body or head or other supporting tag is missing in your HTML."},"liveServer.settings.host":{"type":"string","default":"127.0.0.1","description":"To switch between localhost or 127.0.0.1 or anything else. Default is 127.0.0.1"},"liveServer.settings.useLocalIp":{"type":"boolean","default":false,"description":"Use local IP as host"},"liveServer.settings.proxy":{"type":"object","default":{"enable":false,"baseUri":"/","proxyUri":"http://127.0.0.1:80"},"properties":{"enable":{"type":"boolean","default":false,"description":"Make it true to enable the feature."},"baseUri":{"type":"string","default":"/","pattern":""},"proxyUri":{"type":"string","default":"http://127.0.0.1:80","pattern":"(^http[s]?://)(.[^(\\|\\s)]+)$"}},"required":["enable","baseUri","proxyUri"],"additionalProperties":false,"description":"To Setup Proxy"},"liveServer.settings.useWebExt":{"type":"boolean","default":false,"description":"You have to install a browser extension. That will be works for your dynamic pages (like PHP)."},"liveServer.settings.wait":{"type":"number","default":100,"description":"Delay before live reloading. Value in milliseconds. Default is 100"},"liveServer.settings.fullReload":{"type":"boolean","default":false,"description":"By Default Live Server inject CSS changes without full reloading of browser. You can change this behavior by making this setting as `true`"},"liveServer.settings.https":{"type":"object","default":{"enable":false,"cert":"","key":"","passphrase":""},"properties":{"enable":{"type":"boolean","default":false,"description":"Make it true to enable it."},"cert":{"type":"string","default":"","description":"Add full path certificate."},"key":{"type":"string","default":"","description":"Add full path key"},"passphrase":{"type":"string","default":"","description":"Add Pass Phrase."}},"required":["enable","cert","key","passphrase"],"additionalProperties":false,"description":"Setup https configuration"},"liveServer.settings.file":{"type":"string","default":"","description":"When set, serve this file (server root relative) for every 404 (useful for single-page applications)"},"liveServer.settings.multiRootWorkspaceName":{"type":"string","default":null,"description":"This the entry point of server when you're in multiroot workspace"}}}},"license":"MIT","icon":"images/icon.png","bugs":{"url":"https://github.com/ritwickdey/vscode-live-server/issues","email":"ritwickdey@outlook.com"},"repository":{"type":"git","url":"https://github.com/ritwickdey/vscode-live-server.git"},"homepage":"https://ritwickdey.github.io/vscode-live-server/","scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -p ./","test":"run-s test:*","test:lint":"tslint --project .","test:unit":"node ./out/test/runTest.js","test:e2e":"wdio run ./test/wdio.conf.ts","precommit":"npm run test:lint","prepush":"npm run test:lint","watch":"tsc -watch -p ./"},"husky":{"hooks":{"pre-commit":"npm run precommit","pre-push":"npm run prepush"}},"devDependencies":{"@types/glob":"^7.1.1","@types/node":"^17.0.6","@types/vscode":"^1.51.0","@vscode/test-electron":"^2.0.1","@wdio/cli":"^7.19.3","@wdio/local-runner":"^7.19.3","@wdio/mocha-framework":"^7.19.3","@wdio/spec-reporter":"^7.19.1","glob":"^7.2.0","husky":"^1.2.1","mocha":"^9.2.2","npm-run-all":"^4.1.5","semver":"^7.3.6","ts-node":"^10.7.0","tslint":"^6.1.3","typescript":"^4.5.4","vsce":"^2.7.0","wdio-vscode-service":"^2.0.1","es5-ext":"0.10.53"},"dependencies":{"http-shutdown":"^1.2.0","ips":"^2.1.3","live-server":"file:lib\\live-server","opn":"^6.0.0","vsls":"^0.3.967"},"overrides":{"es5-ext":"0.10.53"},"announcement":{"onVersion":"5.7.9","message":"[NEW] LiveServer@5.7.9: Activation load time improved"}},"location":{"$mid":1,"path":"/home/arjuntina/.vscode-oss/extensions/ritwickdey.liveserver-5.7.9-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"b63c44fd-0457-4696-99e9-dbfdf70d77de","publisherId":"17fd9a78-e430-4a78-add2-ade4a8830352","publisherDisplayName":"ritwickdey","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1692126901938},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"whizkydee.material-palenight-theme","uuid":"7f147721-ec06-4043-9e37-c9ffbecbccd1"},"manifest":{"name":"material-palenight-theme","publisher":"whizkydee","author":"Olaolu Olawuyi <mrolaolu@gmail.com> (http://twitter.com/mrolaolu)","displayName":"Palenight Theme","version":"2.0.2","description":"An elegant and juicy material-inspired theme for Visual Studio Code.","galleryBanner":{"color":"#31364A","theme":"dark"},"icon":"icon.png","keywords":["material theme","palenight","material","purple","dark"],"repository":{"url":"https://github.com/whizkydee/vscode-palenight-theme","type":"git"},"bugs":{"url":"https://github.com/whizkydee/vscode-palenight-theme/issues"},"license":"MIT","engines":{"vscode":"^1.12.0"},"scripts":{"start":"nodemon --exec vsce package","build":"nodemon --watch src src"},"categories":["Themes","Other"],"contributes":{"themes":[{"label":"Palenight Theme","uiTheme":"vs-dark","path":"./themes/palenight.json"},{"label":"Palenight Italic","uiTheme":"vs-dark","path":"./themes/palenight-italic.json"},{"label":"Palenight Operator","uiTheme":"vs-dark","path":"./themes/palenight-operator.json"},{"label":"Palenight (Mild Contrast)","uiTheme":"vs-dark","path":"./themes/palenight-mild-contrast.json"}]},"devDependencies":{"nodemon":"^1.12.1","vsce":"^1.88.0"}},"location":{"$mid":1,"path":"/home/arjuntina/.vscode-oss/extensions/whizkydee.material-palenight-theme-2.0.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"7f147721-ec06-4043-9e37-c9ffbecbccd1","publisherId":"942a68c7-9bce-4e1c-9bb0-828710897a61","publisherDisplayName":"whizkydee","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1692126928051},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"pkief.material-product-icons","uuid":"f797dacd-4e80-4f33-8b63-d665c0956013"},"manifest":{"name":"material-product-icons","displayName":"Material Product Icons","description":"Product Icon Theme with Material Icons for VS Code","version":"1.6.0","publisher":"PKief","author":{"name":"Philipp Kief","email":"philipp.kief@gmx.de","url":"https://pkief.github.io"},"funding":"https://github.com/sponsors/PKief","sponsor":{"url":"https://github.com/sponsors/PKief"},"engines":{"vscode":"^1.53.0"},"scripts":{"start":"nodemon ./src/index.ts","build":"ts-node ./src/index.ts","preview":"ts-node ./src/scripts/preview/index.ts","changelog":"changelog-machine --config changelog.config.json","preversion":"npm run preview && git add images/preview.png","version":"npm run changelog && git add CHANGELOG.md","lint":"eslint -c .eslintrc.json --ext .ts ./src/**/*.ts"},"homepage":"https://github.com/PKief/vscode-material-product-icons/blob/master/README.md","repository":{"url":"https://github.com/PKief/vscode-material-product-icons.git","type":"git"},"bugs":{"url":"https://github.com/PKief/vscode-material-product-icons/issues"},"icon":"logo.png","galleryBanner":{"color":"#1e1e1e","theme":"dark"},"extensionKind":["ui","workspace"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"categories":["Themes"],"keywords":["icons","theme","material","icon-theme","product-icon-theme","customization"],"contributes":{"productIconThemes":[{"id":"material-product-icons","label":"Material Product Icons","path":"./theme/material.product-icon-theme.json"}]},"devDependencies":{"@types/puppeteer":"^7.0.4","@typescript-eslint/eslint-plugin":"^6.3.0","@typescript-eslint/parser":"^6.3.0","changelog-machine":"^1.0.2","eslint":"^8.47.0","eslint-config-prettier":"^9.0.0","eslint-plugin-prettier":"^5.0.0","nodemon":"^3.0.1","puppeteer":"^21.0.3","ts-node":"^10.9.1","typescript":"^5.1.6","webfont":"^11.2.26"}},"location":{"$mid":1,"path":"/home/arjuntina/.vscode-oss/extensions/pkief.material-product-icons-1.6.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"f797dacd-4e80-4f33-8b63-d665c0956013","publisherId":"f9e5bc2f-fea1-4075-917f-d83e01e69f56","publisherDisplayName":"PKief","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1692126929784},"isValid":true,"validations":[[2,"property `extensionKind` can be defined only if property `main` is also defined."]]},{"type":1,"identifier":{"id":"ms-vscode.powershell","uuid":"40d39ce9-c381-47a0-80c8-a6661f731eab"},"manifest":{"name":"powershell","displayName":"PowerShell","version":"2023.6.0","preview":false,"publisher":"ms-vscode","description":"Develop PowerShell modules, commands and scripts in Visual Studio Code!","engines":{"vscode":"^1.67.0"},"author":"Microsoft Corporation","license":"SEE LICENSE IN LICENSE.txt","homepage":"https://github.com/PowerShell/vscode-powershell/blob/main/README.md","categories":["Debuggers","Formatters","Programming Languages","Snippets","Linters","Themes"],"keywords":["PowerShell","pwsh"],"icon":"media/PowerShell_Icon.png","galleryBanner":{"color":"#ACD1EC","theme":"light"},"badges":[{"url":"https://dev.azure.com/powershell/vscode-powershell/_apis/build/status/PowerShell.vscode-powershell?branchName=main","href":"https://dev.azure.com/powershell/vscode-powershell/_build/latest?definitionId=51&branchName=main","description":"Build Status"},{"url":"https://img.shields.io/discord/180528040881815552.svg?label=%23vscode&logo=discord&logoColor=white","href":"https://aka.ms/powershell-vscode-discord","description":"Join the chat on Discord"},{"url":"https://badges.gitter.im/PowerShell/vscode-powershell.svg","href":"https://gitter.im/PowerShell/vscode-powershell?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge","description":"Join the chat on Gitter"}],"repository":{"type":"git","url":"https://github.com/PowerShell/vscode-powershell.git"},"bugs":{"url":"https://github.com/PowerShell/vscode-powershell/issues"},"activationEvents":["onDebugResolve:PowerShell","onLanguage:powershell","onCommand:PowerShell.NewProjectFromTemplate","onCommand:PowerShell.OpenExamplesFolder","onCommand:PowerShell.PickPSHostProcess","onCommand:PowerShell.PickRunspace","onCommand:PowerShell.SpecifyScriptArgs","onCommand:PowerShell.ShowSessionConsole","onCommand:PowerShell.ShowSessionMenu","onCommand:PowerShell.RestartSession","onCommand:PowerShell.ShowLogs","onCommand:PowerShell.OpenLogFolder","onCommand:PowerShell.GenerateBugReport","onCommand:PowerShell.OpenExamplesFolder","onCommand:PowerShell.EnableISEMode","onCommand:PowerShell.DisableISEMode","onCommand:PowerShell.ToggleISEMode","onView:PowerShellCommands","onWalkthrough:PowerShell"],"dependencies":{"@vscode/extension-telemetry":"0.6.2","node-fetch":"2.6.11","semver":"7.5.1","uuid":"9.0.0","vscode-languageclient":"8.1.0","vscode-languageserver-protocol":"3.17.3"},"devDependencies":{"@types/mocha":"10.0.1","@types/mock-fs":"4.13.1","@types/node":"16.18.12","@types/node-fetch":"2.6.3","@types/rewire":"2.5.28","@types/semver":"7.5.0","@types/sinon":"10.0.15","@types/ungap__structured-clone":"0.3.0","@types/uuid":"9.0.1","@types/vscode":"1.67.0","@typescript-eslint/eslint-plugin":"5.59.8","@typescript-eslint/parser":"5.59.8","@ungap/structured-clone":"1.2.0","@vscode/test-electron":"2.3.2","@vscode/vsce":"2.19.0","esbuild":"0.17.19","eslint":"8.41.0","eslint-plugin-header":"3.1.1","glob":"10.2.6","mocha":"10.2.0","mocha-explorer-launcher-scripts":"0.4.0","mocha-multi-reporters":"1.5.1","mock-fs":"5.2.0","rewire":"6.0.0","sinon":"15.1.0","source-map-support":"0.5.21","typescript":"5.0.4"},"extensionDependencies":["vscode.powershell"],"main":"./out/main.js","scripts":{"lint":"eslint . --ext .ts","build":"esbuild ./src/main.ts --outdir=out --bundle --external:vscode --platform=node","build-watch":"npm run build -- --watch","build-test":"tsc --incremental","build-test-watch":"npm run build-test -- --watch","test":"npm run build-test && node ./out/test/runTests.js","package":"vsce package --no-gitHubIssueLinking","publish":"vsce publish"},"contributes":{"breakpoints":[{"language":"powershell"}],"viewsContainers":{"activitybar":[{"id":"PowerShell","title":"PowerShell","icon":"$(terminal-powershell)"}]},"views":{"PowerShell":[{"id":"PowerShellCommands","name":"Command Explorer","when":"config.powershell.sideBar.CommandExplorerVisibility"}]},"keybindings":[{"command":"PowerShell.ShowHelp","key":"ctrl+f1","when":"editorTextFocus && editorLangId == 'powershell'"},{"command":"PowerShell.ExpandAlias","key":"shift+alt+e","when":"editorTextFocus && editorLangId == 'powershell'"},{"command":"PowerShell.ShowAdditionalCommands","key":"shift+alt+s","when":"editorTextFocus && editorLangId == 'powershell'"},{"command":"PowerShell.RunSelection","key":"f8","when":"editorTextFocus && editorLangId == 'powershell'"},{"command":"editor.action.insertSnippet","when":"editorTextFocus && editorLangId == 'powershell'","mac":"cmd+alt+j","win":"ctrl+alt+j","linux":"ctrl+alt+j"}],"commands":[{"command":"PowerShell.ExpandAlias","title":"Expand Alias","category":"PowerShell"},{"command":"PowerShell.EnableISEMode","title":"Enable ISE Mode","category":"PowerShell"},{"command":"PowerShell.DisableISEMode","title":"Disable ISE Mode (restore to defaults)","category":"PowerShell"},{"command":"PowerShell.ToggleISEMode","title":"Toggle ISE Mode","category":"PowerShell"},{"command":"PowerShell.RefreshCommandsExplorer","title":"Refresh Command Explorer","category":"PowerShell","icon":"$(sync)"},{"command":"PowerShell.InsertCommand","title":"Insert Command","category":"PowerShell","icon":"$(pencil)"},{"command":"PowerShell.ShowHelp","title":"Get Help for Command","category":"PowerShell","icon":"$(question)"},{"command":"PowerShell.Debug.Start","title":"Run","category":"PowerShell","icon":"$(run)"},{"command":"PowerShell.RunSelection","title":"Run Selection","category":"PowerShell","icon":"$(debug-line-by-line)"},{"command":"PowerShell.RestartSession","title":"Restart Session","category":"PowerShell"},{"command":"PowerShell.ShowLogs","title":"Show PowerShell Extension Logs","category":"PowerShell"},{"command":"PowerShell.OpenLogFolder","title":"Open PowerShell Extension Logs Folder","category":"PowerShell"},{"command":"PowerShell.GenerateBugReport","title":"Upload Bug Report to GitHub","category":"PowerShell"},{"command":"PowerShell.OpenInISE","title":"Open Current File in PowerShell ISE","category":"PowerShell"},{"command":"PowerShell.PowerShellFindModule","title":"Find/Install PowerShell Modules from the Gallery","category":"PowerShell","deprecationMessage":"This feature is no longer available, we're sorry!"},{"command":"PowerShell.ShowAdditionalCommands","title":"Show Additional Commands from PowerShell Modules","category":"PowerShell"},{"command":"PowerShell.ShowSessionMenu","title":"Show Session Menu","category":"PowerShell"},{"command":"PowerShell.ShowSessionConsole","title":"Show Extension Terminal","category":"PowerShell"},{"command":"PowerShell.NewProjectFromTemplate","title":"Create New Project from Plaster Template","category":"PowerShell"},{"command":"PowerShell.RunPesterTestsFromFile","title":"Run Pester tests","category":"PowerShell"},{"command":"PowerShell.DebugPesterTestsFromFile","title":"Debug Pester tests","category":"PowerShell"},{"command":"PowerShell.OpenExamplesFolder","title":"Open Examples Folder","category":"PowerShell"},{"command":"PowerShell.InvokeRegisteredEditorCommand","title":"Invoke Registered Editor Command","category":"PowerShell"},{"command":"PowerShell.WalkthroughTelemetry","title":"Walkthrough Telemetry","category":"PowerShell"},{"command":"PowerShell.ClosePanel","title":"Close panel","category":"PowerShell"},{"command":"PowerShell.PositionPanelLeft","title":"Move panel left","category":"PowerShell","icon":"$(layout-sidebar-left)"},{"command":"PowerShell.PositionPanelBottom","title":"Move panel to bottom","category":"PowerShell","icon":"$(layout-panel-right)"}],"menus":{"commandPalette":[{"command":"PowerShell.InsertCommand","when":"false"},{"command":"PowerShell.RefreshCommandsExplorer","when":"config.powershell.sideBar.CommandExplorerVisibility"},{"command":"PowerShell.InvokeRegisteredEditorCommand","when":"false"}],"explorer/context":[{"command":"PowerShell.RunPesterTestsFromFile","when":"resourceFilename =~ /\\.tests\\.ps1$/i"},{"command":"PowerShell.DebugPesterTestsFromFile","when":"resourceFilename =~ /\\.tests\\.ps1$/i"}],"editor/context":[{"when":"editorLangId == powershell","command":"PowerShell.RunSelection","group":"2_powershell"},{"when":"editorLangId == powershell","command":"PowerShell.ShowHelp","group":"2_powershell"}],"editor/title":[{"when":"editorLangId == powershell && config.powershell.buttons.showPanelMovementButtons","command":"PowerShell.PositionPanelBottom","group":"navigation@97"},{"when":"editorLangId == powershell && config.powershell.buttons.showPanelMovementButtons","command":"PowerShell.PositionPanelLeft","group":"navigation@98"},{"when":"editorLangId == powershell && config.powershell.buttons.showRunButtons","command":"PowerShell.Debug.Start","group":"navigation@100"},{"when":"editorLangId == powershell && config.powershell.buttons.showRunButtons","command":"PowerShell.RunSelection","group":"navigation@101"}],"editor/title/context":[{"when":"resourceFilename =~ /\\.tests\\.ps1$/i","command":"PowerShell.RunPesterTestsFromFile"},{"when":"resourceFilename =~ /\\.tests\\.ps1$/i","command":"PowerShell.DebugPesterTestsFromFile"}],"view/title":[{"command":"PowerShell.RefreshCommandsExplorer","when":"view == PowerShellCommands","group":"navigation"}],"view/item/context":[{"command":"PowerShell.ShowHelp","when":"view == PowerShellCommands","group":"inline@1"},{"command":"PowerShell.InsertCommand","when":"view == PowerShellCommands","group":"inline@2"}]},"problemMatchers":[{"name":"pester","owner":"powershell","fileLocation":["absolute"],"severity":"error","pattern":[{"regexp":"^\\s*(?:\\[-\\]\\s+)(.*?)(?:\\s+\\d+\\.?\\d*\\s*m?s)(?:\\s+\\(\\d+\\.?\\d*m?s\\|\\d+\\.?\\d*m?s\\))?\\s*$","message":1},{"regexp":"^\\s+[Aa]t\\s+([^,]+,)?(.+?):(\\s+line\\s+)?(\\d+)(\\s+char:\\d+)?$","file":2,"line":4}]}],"snippets":[{"language":"powershell","path":"./snippets/PowerShell.json"}],"debuggers":[{"type":"PowerShell","label":"PowerShell","variables":{"PickPSHostProcess":"PowerShell.PickPSHostProcess","PickRunspace":"PowerShell.PickRunspace","SpecifyScriptArgs":"PowerShell.SpecifyScriptArgs"},"languages":["powershell"],"configurationSnippets":[{"label":"PowerShell: Launch Current File","description":"Launch and debug the file in the currently active editor window","body":{"name":"PowerShell Launch Current File","type":"PowerShell","request":"launch","script":"^\"\\${file}\"","cwd":"^\"\\${cwd}\""}},{"label":"PowerShell: Launch Script","description":"Launch and debug the specified file or command","body":{"name":"PowerShell Launch Script","type":"PowerShell","request":"launch","script":"^\"enter path or command to execute e.g.: \\${workspaceFolder}/src/foo.ps1 or Invoke-Pester\"","cwd":"^\"\\${cwd}\""}},{"label":"PowerShell: Interactive Session","description":"Debug commands executed from the Extension Terminal","body":{"name":"PowerShell Interactive Session","type":"PowerShell","request":"launch","cwd":"^\"\\${cwd}\""}},{"label":"PowerShell: Attach to PowerShell Host Process","description":"Attach the debugger to a running PowerShell Host Process","body":{"name":"PowerShell Attach to Host Process","type":"PowerShell","request":"attach","runspaceId":1}},{"label":"PowerShell: Attach Interactive Session Runspace","description":"Open runspace picker to select runspace to attach debugger to","body":{"name":"PowerShell Attach Interactive Session Runspace","type":"PowerShell","request":"attach","processId":"current"}},{"label":"PowerShell: Run Pester Tests","description":"Debug Pester Tests detected in your current directory (runs Invoke-Pester)","body":{"name":"PowerShell Run Pester Tests","type":"PowerShell","request":"launch","script":"Invoke-Pester","createTemporaryIntegratedConsole":true,"attachDotnetDebugger":true}},{"label":"PowerShell: Interactive Session (Module)","description":"Debug commands executed from the PowerShell Extension Terminal after auto-loading your module","body":{"name":"PowerShell: Module Interactive Session","type":"PowerShell","request":"launch","script":"Enter command to import your binary module, for example: \"Import-Module -Force ${workspaceFolder}/path/to/module.psd1|dll\""}},{"label":"PowerShell: Interactive Session (Binary Module)","description":"Debug a .NET binary or hybrid module loaded into a PowerShell session. Breakpoints you set in your .NET (C#/F#/VB/etc.) code will be hit upon command execution. You may want to add a compile or watch action as a pre-launch task to this configuration.","body":{"name":"PowerShell: Binary Module Interactive","type":"PowerShell","request":"launch","script":"Enter command to import your binary module, for example: \"Import-Module -Force ${workspaceFolder}/path/to/module.psd1|dll\"","createTemporaryIntegratedConsole":true,"attachDotnetDebugger":true}},{"label":"Run Pester Tests (Binary Module)","description":"Debug a .NET binary or hybrid module by running Pester tests. Breakpoints you set in your .NET (C#/F#/VB/etc.) code will be hit upon command execution. You may want to add a compile or watch action as a pre-launch task to this configuration.","body":{"name":"PowerShell: Binary Module Pester Tests","type":"PowerShell","request":"launch","script":"Invoke-Pester","createTemporaryIntegratedConsole":true,"attachDotnetDebugger":true}}],"configurationAttributes":{"launch":{"properties":{"script":{"type":"string","description":"Optional: Absolute path to the PowerShell script to launch under the debugger."},"args":{"type":"array","description":"Command line arguments to pass to the PowerShell script. Specify \"${command:SpecifyScriptArgs}\" if you want to be prompted for the args.","items":{"type":"string"},"default":[]},"cwd":{"type":"string","description":"Absolute path to the working directory. Default is the current workspace folder.","default":"${workspaceFolder}"},"createTemporaryIntegratedConsole":{"type":"boolean","description":"Determines whether a temporary PowerShell Extension Terminal is created for each debugging session, useful for debugging PowerShell classes and binary modules.  Overrides the user setting 'powershell.debugging.createTemporaryIntegratedConsole'.","default":false},"attachDotnetDebugger":{"type":"boolean","description":"If specified, a C# debug session will be started and attached to the new temporary extension terminal. This does nothing unless 'powershell.debugging.createTemporaryIntegratedConsole' is also specified.","default":false},"dotnetDebuggerConfigName":{"type":"string","description":"If you would like to use a custom coreclr attach debug launch configuration for the debug session, specify the name here. Otherwise a default basic config will be used. The config must be a coreclr attach config. Launch configs are not supported.","default":false}}},"attach":{"properties":{"computerName":{"type":"string","description":"Optional: The computer name to which a remote session will be established.  Works only on PowerShell 4 and above."},"processId":{"type":"string","description":"The process id of the PowerShell host process to attach to.  Works only on PowerShell 5 and above.","default":null},"runspaceId":{"type":["string","number"],"description":"Optional: The ID of the runspace to debug in the attached process.  Defaults to 1.  Works only on PowerShell 5 and above.","default":null},"runspaceName":{"type":"string","description":"Optional: The Name of the runspace to debug in the attached process.  Works only on PowerShell 5 and above.","default":null},"customPipeName":{"type":"string","description":"The custom pipe name of the PowerShell host process to attach to.  Works only on PowerShell 6.2 and above.","default":null}}}},"initialConfigurations":[]}],"configuration":{"title":"PowerShell","properties":{"powershell.sideBar.CommandExplorerVisibility":{"type":"boolean","default":true,"markdownDescription":"Specifies the visibility of the Command Explorer in the side bar."},"powershell.sideBar.CommandExplorerExcludeFilter":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"Specifies an array of modules to exclude from Command Explorer listing."},"powershell.powerShellAdditionalExePaths":{"type":"object","default":{},"markdownDescription":"Specifies a list of Item / Value pairs where the **Item** is a user-chosen name and the **Value** is an absolute path to a PowerShell executable. The name appears in the [Session Menu Command](command:PowerShell.ShowSessionMenu) and is used to reference this executable in the `#powershell.powerShellDefaultVersion#` setting.","additionalProperties":{"type":"string"}},"powershell.powerShellDefaultVersion":{"type":"string","default":"","markdownDescription":"Specifies the default PowerShell version started by the extension. The name must match what is displayed in the [Session Menu command](command:PowerShell.ShowSessionMenu), for example, `Windows PowerShell (x86)`. You can specify additional PowerShell executables with the `#powershell.powerShellAdditionalExePaths#` setting."},"powershell.powerShellExePath":{"type":"string","default":"","scope":"machine","markdownDescription":"**Deprecated:** Specifies the path to the PowerShell executable.","markdownDeprecationMessage":"**Deprecated:** Please use the `#powershell.powerShellAdditionalExePaths#` setting instead."},"powershell.promptToUpdatePowerShell":{"type":"boolean","default":true,"markdownDescription":"Specifies whether you may be prompted to update your version of PowerShell."},"powershell.promptToUpdatePackageManagement":{"type":"boolean","default":false,"markdownDescription":"**Deprecated:** Specifies whether you should be prompted to update your version of `PackageManagement` if it's under 1.4.6.","markdownDeprecationMessage":"**Deprecated:** This prompt has been removed as it's no longer strictly necessary to upgrade the `PackageManagement` module."},"powershell.startAsLoginShell.osx":{"type":"boolean","default":true,"markdownDescription":"Starts the PowerShell extension's underlying PowerShell process as a login shell, if applicable."},"powershell.startAsLoginShell.linux":{"type":"boolean","default":false,"markdownDescription":"Starts the PowerShell extension's underlying PowerShell process as a login shell, if applicable."},"powershell.startAutomatically":{"type":"boolean","default":true,"markdownDescription":"Starts the PowerShell extension automatically when a PowerShell file is opened. If `false`, to start the extension use the [Restart Session command](command:PowerShell.RestartSession). **IntelliSense, code navigation, the Extension Terminal, code formatting, and other features are not enabled until the extension starts.**"},"powershell.useX86Host":{"type":"boolean","default":false,"markdownDescription":"**Deprecated:** Uses the 32-bit language service on 64-bit Windows. This setting has no effect on 32-bit Windows or on the PowerShell extension debugger, which has its own architecture configuration.","markdownDeprecationMessage":"**Deprecated:** This setting was removed when the PowerShell installation searcher was added. Please use the `#powershell.powerShellAdditionalExePaths#` setting instead."},"powershell.enableProfileLoading":{"type":"boolean","default":true,"markdownDescription":"Specifies whether the extension loads [PowerShell profiles](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_profiles). Note that the extension's \"Current Host\" profile is `Microsoft.VSCode_profile.ps1`, which will be loaded instead of the default \"Current Host\" profile of `Microsoft.PowerShell_profile.ps1`. Use the \"All Hosts\" profile `profile.ps1` for common configuration."},"powershell.enableReferencesCodeLens":{"type":"boolean","default":true,"markdownDescription":"Specifies if Code Lenses are displayed above function definitions, used to show the number of times the function is referenced in the workspace and navigate to those references. Large workspaces may want to disable this setting if performance is compromised. See also `#powershell.analyzeOpenDocumentsOnly#`."},"powershell.analyzeOpenDocumentsOnly":{"type":"boolean","default":false,"markdownDescription":"Specifies to search for references only within open documents instead of all workspace files. An alternative to `#powershell.enableReferencesCodeLens#` that allows large workspaces to support some references without the performance impact."},"powershell.bugReporting.project":{"type":"string","default":"https://github.com/PowerShell/vscode-powershell","markdownDescription":"**Deprecated:** Specifies the URL of the GitHub project in which to generate bug reports.","markdownDeprecationMessage":"**Deprecated:** This setting was never meant to be changed!"},"powershell.helpCompletion":{"type":"string","default":"BlockComment","enum":["Disabled","BlockComment","LineComment"],"markdownEnumDescriptions":["Disables the feature.","Inserts a block style help comment, for example:\n\n`<#`\n\n`.<help keyword>`\n\n`<help content>`\n\n`#>`","Inserts a line style help comment, for example:\n\n`# .<help keyword>`\n\n`# <help content>`"],"markdownDescription":"Specifies the [comment based help](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_comment_based_help) completion style triggered by typing ` ##`."},"powershell.cwd":{"type":"string","default":"","markdownDescription":"An explicit start path where the Extension Terminal will be launched. Both the PowerShell process's and the shell's location will be set to this directory. **Path must be fully resolved: variables are not supported!**"},"powershell.scriptAnalysis.enable":{"type":"boolean","default":true,"markdownDescription":"Enables real-time script analysis using [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) that populates the [Problems view](command:workbench.panel.markers.view.focus)."},"powershell.scriptAnalysis.settingsPath":{"type":"string","default":"PSScriptAnalyzerSettings.psd1","markdownDescription":"Specifies the path to a [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) settings file. **This setting may not work as expected currently!**"},"powershell.codeFolding.enable":{"type":"boolean","default":true,"markdownDescription":"Enables syntax based code folding. When disabled, the default indentation based code folding is used."},"powershell.codeFolding.showLastLine":{"type":"boolean","default":true,"markdownDescription":"Shows the last line of a folded section similar to the default VS Code folding style. When disabled, the entire folded region is hidden."},"powershell.codeFormatting.autoCorrectAliases":{"type":"boolean","default":false,"markdownDescription":"Replaces aliases with their aliased name."},"powershell.codeFormatting.avoidSemicolonsAsLineTerminators":{"type":"boolean","default":false,"markdownDescription":"Removes redundant semicolon(s) at the end of a line where a line terminator is sufficient."},"powershell.codeFormatting.preset":{"type":"string","default":"Custom","enum":["Custom","Allman","OTBS","Stroustrup"],"markdownEnumDescriptions":["The three brace settings are respected as-is.","Sets `#powershell.codeFormatting.openBraceOnSameLine#` to `false`, `#powershell.codeFormatting.newLineAfterOpenBrace#` to `true`, and `#powershell.codeFormatting.newLineAfterCloseBrace#` to `true`.","Sets `#powershell.codeFormatting.openBraceOnSameLine#` to `true`, `#powershell.codeFormatting.newLineAfterOpenBrace#` to `true`, and `#powershell.codeFormatting.newLineAfterCloseBrace#` to `false`.","Sets `#powershell.codeFormatting.openBraceOnSameLine#` to `true`, `#powershell.codeFormatting.newLineAfterOpenBrace#` to `true`, and `#powershell.codeFormatting.newLineAfterCloseBrace#` to `true`."],"markdownDescription":"Sets the code formatting options to follow the given indent style in a way that is compatible with PowerShell syntax. Any setting other than `Custom` will configure (and override) the settings:\n\n* `#powershell.codeFormatting.openBraceOnSameLine#`\n\n* `#powershell.codeFormatting.newLineAfterOpenBrace#`\n\n* `#powershell.codeFormatting.newLineAfterCloseBrace#`\n\nFor more information about the brace styles, please see [PoshCode's discussion](https://github.com/PoshCode/PowerShellPracticeAndStyle/issues/81)."},"powershell.codeFormatting.openBraceOnSameLine":{"type":"boolean","default":true,"markdownDescription":"Places open brace on the same line as its associated statement."},"powershell.codeFormatting.newLineAfterOpenBrace":{"type":"boolean","default":true,"markdownDescription":"Adds a newline (line break) after an open brace."},"powershell.codeFormatting.newLineAfterCloseBrace":{"type":"boolean","default":true,"markdownDescription":"Adds a newline (line break) after a closing brace."},"powershell.codeFormatting.pipelineIndentationStyle":{"type":"string","default":"NoIndentation","enum":["IncreaseIndentationForFirstPipeline","IncreaseIndentationAfterEveryPipeline","NoIndentation","None"],"markdownEnumDescriptions":["Indent once after the first pipeline and keep this indentation.","Indent more after the first pipeline and keep this indentation.","Do not increase indentation.","Do not change any existing pipeline indentation (disables feature)."],"markdownDescription":"Whether to increase indentation after a pipeline for multi-line statements. See [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer/blob/a94d9f5666bba9f569cdf9c1bc99556934f2b8f4/docs/Rules/UseConsistentIndentation.md#pipelineindentation-string-default-value-is-increaseindentationforfirstpipeline) for examples. It is suggested to use `IncreaseIndentationForFirstPipeline` instead of the default `NoIndentation`. **This default may change in the future,** please see the [Request For Comment](https://github.com/PowerShell/vscode-powershell/issues/4296)."},"powershell.codeFormatting.whitespaceBeforeOpenBrace":{"type":"boolean","default":true,"markdownDescription":"Adds a space between a keyword and its associated script-block expression."},"powershell.codeFormatting.whitespaceBeforeOpenParen":{"type":"boolean","default":true,"markdownDescription":"Adds a space between a keyword (`if`, `elseif`, `while`, `switch`, etc.) and its associated conditional expression."},"powershell.codeFormatting.whitespaceAroundOperator":{"type":"boolean","default":true,"markdownDescription":"Adds spaces before and after an operator (`=`, `+`, `-`, etc.)."},"powershell.codeFormatting.whitespaceAfterSeparator":{"type":"boolean","default":true,"markdownDescription":"Adds a space after a separator (`,` and `;`)."},"powershell.codeFormatting.whitespaceInsideBrace":{"type":"boolean","default":true,"markdownDescription":"Adds a space after an opening brace (`{`) and before a closing brace (`}`)."},"powershell.codeFormatting.whitespaceBetweenParameters":{"type":"boolean","default":false,"markdownDescription":"Removes redundant whitespace between parameters."},"powershell.codeFormatting.whitespaceAroundPipe":{"type":"boolean","default":true,"markdownDescription":"**Deprecated:** Please use the `#powershell.codeFormatting.addWhitespaceAroundPipe#` setting instead. If you've used this setting before, we have moved it for you automatically.","markdownDeprecationMessage":"**Deprecated:** Please use the `#powershell.codeFormatting.addWhitespaceAroundPipe#` setting instead. If you've used this setting before, we have moved it for you automatically."},"powershell.codeFormatting.addWhitespaceAroundPipe":{"type":"boolean","default":true,"markdownDescription":"Adds a space before and after the pipeline operator (`|`) if it is missing."},"powershell.codeFormatting.trimWhitespaceAroundPipe":{"type":"boolean","default":false,"markdownDescription":"Trims extraneous whitespace (more than one character) before and after the pipeline operator (`|`)."},"powershell.codeFormatting.ignoreOneLineBlock":{"type":"boolean","default":true,"markdownDescription":"Does not reformat one-line code blocks, such as: `if (...) {...} else {...}`."},"powershell.codeFormatting.alignPropertyValuePairs":{"type":"boolean","default":true,"markdownDescription":"Align assignment statements in a hashtable or a DSC Configuration."},"powershell.codeFormatting.useConstantStrings":{"type":"boolean","default":false,"markdownDescription":"Use single quotes if a string is not interpolated and its value does not contain a single quote."},"powershell.codeFormatting.useCorrectCasing":{"type":"boolean","default":false,"markdownDescription":"Use correct casing for cmdlets."},"powershell.integratedConsole.showOnStartup":{"type":"boolean","default":true,"markdownDescription":"Shows the Extension Terminal when the PowerShell extension is initialized. When disabled, the pane is not opened on startup, but the Extension Terminal is still created in order to power the extension's features."},"powershell.integratedConsole.startInBackground":{"type":"boolean","default":false,"markdownDescription":"Starts the Extension Terminal in the background. **If this is enabled, to access the terminal you must run the [Show Extension Terminal command](command:PowerShell.ShowSessionConsole), and once shown it cannot be put back into the background.** This option completely hides the Extension Terminal from the terminals view. You are probably looking for the `#powershell.integratedConsole.showOnStartup#` option instead."},"powershell.integratedConsole.focusConsoleOnExecute":{"type":"boolean","default":true,"markdownDescription":"Switches focus to the console when a script selection is run or a script file is debugged."},"powershell.integratedConsole.useLegacyReadLine":{"type":"boolean","default":false,"markdownDescription":"This will disable the use of PSReadLine in the PowerShell Extension Terminal and use a legacy implementation. **This setting is not recommended and likely to be deprecated!**"},"powershell.integratedConsole.forceClearScrollbackBuffer":{"type":"boolean","default":false,"markdownDescription":"Use the VS Code API to clear the terminal since that's the only reliable way to clear the scrollback buffer. Turn this on if you're used to `Clear-Host` clearing scroll history. **This setting is not recommended and likely to be deprecated!**"},"powershell.integratedConsole.suppressStartupBanner":{"type":"boolean","default":false,"markdownDescription":"Do not show the startup banner in the PowerShell Extension Terminal."},"powershell.debugging.createTemporaryIntegratedConsole":{"type":"boolean","default":false,"markdownDescription":"Creates a temporary PowerShell Extension Terminal for each debugging session. This is useful for debugging PowerShell classes and binary modules."},"powershell.developer.bundledModulesPath":{"type":"string","default":"../../PowerShellEditorServices/module","markdownDescription":"Specifies an alternative path to the folder containing modules that are bundled with the PowerShell extension, that is: PowerShell Editor Services, PSScriptAnalyzer, Plaster, and PSReadLine. **This setting is only meant for extension developers and requires the extension to be run in development mode!**"},"powershell.developer.editorServicesLogLevel":{"type":"string","default":"Normal","enum":["Diagnostic","Verbose","Normal","Warning","Error","None"],"markdownEnumDescriptions":["Enables all logging possible, please use this setting when submitting logs for bug reports!","Enables more logging than normal.","The default logging level.","Only log warnings and errors.","Only log errors.","Disable all logging possible. No log files will be written!"],"markdownDescription":"Sets the log verbosity for both the extension and its LSP server, PowerShell Editor Services. **Please set to `Diagnostic` when recording logs for a bug report!**"},"powershell.developer.editorServicesWaitForDebugger":{"type":"boolean","default":false,"markdownDescription":"Launches the LSP server with the `/waitForDebugger` flag to force it to wait for a .NET debugger to attach before proceeding, and emit its PID until then. **This setting is only meant for extension developers and requires the extension to be run in development mode!**"},"powershell.developer.featureFlags":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"An array of strings that enable experimental features in the PowerShell extension. **No flags are currently available!**"},"powershell.developer.waitForSessionFileTimeoutSeconds":{"type":"number","default":240,"markdownDescription":"Specifies how many seconds the extension will wait for the LSP server, PowerShell Editor Services, to connect. The default is four minutes; try increasing this value if your computer is particularly slow (often caused by overactive anti-malware programs)."},"powershell.pester.useLegacyCodeLens":{"type":"boolean","default":true,"markdownDescription":"Use a CodeLens that is compatible with Pester 4. Disabling this will show `Run Tests` on all `It`, `Describe` and `Context` blocks, and will correctly work only with Pester 5 and newer."},"powershell.pester.codeLens":{"type":"boolean","default":true,"markdownDescription":"This setting controls the appearance of the `Run Tests` and `Debug Tests` CodeLenses that appears above Pester tests."},"powershell.pester.outputVerbosity":{"type":"string","default":"FromPreference","enum":["FromPreference","None","Minimal","Normal","Detailed","Diagnostic"],"markdownDescription":"Defines the verbosity of output to be used. For Pester 5 and newer the default value `FromPreference` will use the `Output` settings from the `$PesterPreference` defined in the caller's context, and will default to `Normal` if there is none. For Pester 4 the `FromPreference` and `Normal` options map to `All`, and `Minimal` option maps to `Fails`."},"powershell.pester.debugOutputVerbosity":{"type":"string","enum":["None","Minimal","Normal","Detailed","Diagnostic"],"default":"Diagnostic","markdownDescription":"Defines the verbosity of output to be used when debugging a test or a block. For Pester 5 and newer the default value `Diagnostic` will print additional information about discovery, skipped and filtered tests, mocking and more."},"powershell.buttons.showRunButtons":{"type":"boolean","default":true,"markdownDescription":"Show the `Run` and `Run Selection` buttons in the editor's title bar."},"powershell.buttons.showPanelMovementButtons":{"type":"boolean","default":false,"markdownDescription":"Show buttons in the editor's title bar for moving the terminals pane (with the PowerShell Extension Terminal) around."}}},"capabilities":{"untrustedWorkspaces":{"supported":false}},"configurationDefaults":{"[powershell]":{"debug.saveBeforeStart":"nonUntitledEditorsInActiveGroup","editor.semanticHighlighting.enabled":false,"editor.wordSeparators":"`~!@#$%^&*()=+[{]}\\|;:'\",.<>/?"}},"themes":[{"label":"PowerShell ISE","uiTheme":"vs","path":"./themes/theme-psise/theme.json"}],"walkthroughs":[{"id":"PowerShell","title":"Get Started with PowerShell","description":"Set up your environment and see what the PowerShell Extension in Visual Studio Code can help you achieve!","steps":[{"id":"install-windows","title":"Choose a version of PowerShell","media":{"markdown":"media/walkthrough.md"},"description":"There are multiple versions of PowerShell that you can use with the extension! Choose the version that best fits your needs here.\nFor the newest version of PowerShell, install PowerShell 7 or run ``iex \"& { $(irm https://aka.ms/install-powershell.ps1) } -UseMSI\"``\n[Install PowerShell 7](https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows)\n⭐️ Latest version ― if you want the latest and greatest capabilities.\n💻 Can be used to manage multiple operating systems.\n👥 [Open source](https://github.com/powershell/powershell) and community-focused!","when":"isWindows"},{"id":"install-mac","title":"Install PowerShell","media":{"markdown":"media/walkthrough.md"},"description":"💻 PowerShell 7 is cross-platform! See the instructions to [install on macOS](https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-macos).\n⭐️ If you already have [Homebrew](https://brew.sh) installed, you can run ``brew install --cask powershell`` to install ``pwsh``.\n👥 PowerShell is [open source](https://github.com/powershell/powershell) and community-focused!","when":"isMac"},{"id":"install-linux","title":"Install PowerShell","media":{"markdown":"media/walkthrough.md"},"description":"💻 PowerShell 7 is cross-platform!\n⭐️ See the instructions to [install on Linux](https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-linux).\n👥 PowerShell is [open source](https://github.com/powershell/powershell) and community-focused!","when":"isLinux"},{"id":"file","title":"Create a PowerShell file","media":{"markdown":"media/walkthrough.md"},"description":"[Create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22powershell%22%7D) or [open](command:toSide:workbench.action.files.openFolder) a PowerShell file, make sure to save it as ``.ps1``\n[Create a File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22powershell%22%7D)\n**Tip:** Use keyboard shortcut ``Ctrl+N`` to open a new script file or ``Ctrl+O`` to open a file."},{"id":"sessions","title":"Switch sessions","media":{"markdown":"media/walkthrough.md"},"description":"To switch between PowerShell 7 and Windows PowerShell 5.1, use the menu:\n[Open PowerShell Sessions Menu](command:PowerShell.ShowSessionMenu)\nYou can pin the [PowerShell Language Status Icon](https://github.com/PowerShell/vscode-powershell/blob/main/docs/troubleshooting.md#how-do-i-change-the-powershell-version) to the status bar in the bottom right-hand corner to easily switch sessions.","completionEvents":["onCommand:PowerShell.ShowSessionConsole"]},{"id":"ise","title":"Try ISE mode","media":{"markdown":"media/walkthrough.md"},"description":"If you are familiar with the Windows PowerShell ISE and would like to configure your settings to simulate the ISE Experience, try the ISE Mode.\n[Toggle ISE Mode](command:PowerShell.ToggleISEMode)","completionEvents":["onCommand:PowerShell.ToggleISEMode"]},{"id":"terminal","title":"Open the PowerShell Extension Terminal","media":{"markdown":"media/walkthrough.md"},"description":"The PowerShell Extension Terminal will run whenever the extension starts in order to enable the its features.\n[Show Panel](command:PowerShell.ShowSessionConsole)\nIf you don't want the terminal panel to open on startup, you can keep the panel closed by configuring ``powershell.integratedConsole.showOnStartup`` in your settings.\n[Close Panel](command:PowerShell.ClosePanel)\n**Tip:** Use keyboard shortcut ``Ctrl+``` to open and close terminal."},{"id":"explore","title":"Explore more resources","media":{"markdown":"media/walkthrough.md"},"description":"Now you are ready to start using the PowerShell Extension on your own and explore more resources!\n📚 See the PowerShell Extension's [documentation](https://docs.microsoft.com/en-us/powershell/scripting/dev-cross-plat/vscode/using-vscode?view=powershell-7.2)\nℹ️ View Visual Studio Code's [documentation](https://code.visualstudio.com/docs/languages/powershell)\n🔌 Plug into the [PowerShell Community](https://docs.microsoft.com/en-us/powershell/scripting/community/community-support?view=powershell-7.2)\n📄 Take a look at our [Release Notes](https://docs.microsoft.com/en-us/powershell/scripting/whats-new/what-s-new-in-powershell-73?view=powershell-7.2)"},{"id":"feedback","title":"Share your feedback","media":{"markdown":"media/walkthrough.md"},"description":"How has this walkthrough affected your confidence level when using the PowerShell Extension?\n[I feel less confident](command:PowerShell.WalkthroughTelemetry?%7B%22satisfaction%22%3A3%7D)\n[My confidence has not been affected](command:PowerShell.WalkthroughTelemetry?%7B%22satisfaction%22%3A2%7D)\n[I feel more confident](command:PowerShell.WalkthroughTelemetry?%7B%22satisfaction%22%3A1%7D)"}]}]},"private":true},"location":{"$mid":1,"path":"/home/arjuntina/.vscode-oss/extensions/ms-vscode.powershell-2023.6.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"40d39ce9-c381-47a0-80c8-a6661f731eab","publisherId":"5f5636e7-69ed-4afe-b5d6-8d231fb3d3ee","publisherDisplayName":"ms-vscode","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1692126932489},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"vscodevim.vim","uuid":"d96e79c6-8b25-4be3-8545-0e0ecefcae03"},"manifest":{"name":"vim","displayName":"Vim","description":"Vim emulation for Visual Studio Code","icon":"images/icon.png","version":"1.25.2","publisher":"vscodevim","galleryBanner":{"color":"#e3f4ff","theme":"light"},"license":"MIT","keywords":["vim","vi","vscodevim"],"repository":{"type":"git","url":"https://github.com/VSCodeVim/Vim.git"},"homepage":"https://github.com/VSCodeVim/Vim","bugs":{"url":"https://github.com/VSCodeVim/Vim/issues"},"engines":{"vscode":"^1.74.0"},"categories":["Other","Keymaps"],"extensionKind":["ui"],"sideEffects":false,"activationEvents":["*","onCommand:type"],"qna":"https://vscodevim.herokuapp.com/","main":"./out/extension","browser":"./out/extensionWeb","capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"contributes":{"commands":[{"command":"toggleVim","title":"Vim: Toggle Vim Mode"},{"command":"vim.showQuickpickCmdLine","title":"Vim: Show Command Line"},{"command":"vim.editVimrc","enablement":"!isWeb","title":"Vim: Edit .vimrc"}],"keybindings":[{"key":"Escape","command":"extension.vim_escape","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Escape","command":"notebook.cell.quitEdit","when":"inputFocus && notebookEditorFocused && !editorHasSelection && !editorHoverVisible && vim.active && vim.mode == 'Normal'"},{"key":"Home","command":"extension.vim_home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+home","command":"extension.vim_ctrl+home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"End","command":"extension.vim_end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+end","command":"extension.vim_ctrl+end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"Insert","command":"extension.vim_insert","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Backspace","command":"extension.vim_backspace","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Delete","command":"extension.vim_delete","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"tab","command":"extension.vim_tab","when":"editorFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+tab","command":"extension.vim_shift+tab","when":"editorFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"left","command":"extension.vim_left","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"right","command":"extension.vim_right","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"up","command":"extension.vim_up","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"down","command":"extension.vim_down","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"g g","command":"list.focusFirst","when":"listFocus && !inputFocus"},{"key":"h","command":"list.collapse","when":"listFocus && !inputFocus"},{"key":"j","command":"list.focusDown","when":"listFocus && !inputFocus"},{"key":"k","command":"list.focusUp","when":"listFocus && !inputFocus"},{"key":"l","command":"list.select","when":"listFocus && !inputFocus"},{"key":"o","command":"list.toggleExpand","when":"listFocus && !inputFocus"},{"key":"/","command":"list.toggleKeyboardNavigation","when":"listFocus && !inputFocus && listSupportsKeyboardNavigation"},{"key":"ctrl+a","command":"extension.vim_ctrl+a","when":"editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"},{"key":"ctrl+b","command":"extension.vim_ctrl+b","when":"editorTextFocus && vim.active && vim.use<C-b> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+c","command":"extension.vim_ctrl+c","when":"editorTextFocus && vim.active && vim.use<C-c> && !inDebugRepl && vim.overrideCtrlC"},{"key":"ctrl+d","command":"extension.vim_ctrl+d","when":"editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"},{"key":"ctrl+d","command":"list.focusPageDown","when":"listFocus && !inputFocus"},{"key":"ctrl+e","command":"extension.vim_ctrl+e","when":"editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"},{"key":"ctrl+f","command":"extension.vim_ctrl+f","when":"editorTextFocus && vim.active && vim.use<C-f> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+g","command":"extension.vim_ctrl+g","when":"editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"},{"key":"ctrl+h","command":"extension.vim_ctrl+h","when":"editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"},{"key":"ctrl+i","command":"extension.vim_ctrl+i","when":"editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"},{"key":"ctrl+j","command":"extension.vim_ctrl+j","when":"editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"},{"key":"ctrl+k","command":"extension.vim_ctrl+k","when":"editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"},{"key":"ctrl+l","command":"extension.vim_navigateCtrlL","when":"editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"},{"key":"ctrl+m","command":"extension.vim_ctrl+m","when":"editorTextFocus && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-m> && !inDebugRepl"},{"key":"ctrl+n","command":"extension.vim_ctrl+n","when":"editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-n> && !inDebugRepl"},{"key":"ctrl+o","command":"extension.vim_ctrl+o","when":"editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"},{"key":"ctrl+p","command":"extension.vim_ctrl+p","when":"suggestWidgetVisible && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-p> && !inDebugRepl"},{"key":"ctrl+q","command":"extension.vim_winCtrlQ","when":"editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"},{"key":"ctrl+r","command":"extension.vim_ctrl+r","when":"editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"},{"key":"ctrl+s","command":"extension.vim_ctrl+s","when":"editorTextFocus && vim.active && vim.use<C-s> && !inDebugRepl"},{"key":"ctrl+t","command":"extension.vim_ctrl+t","when":"editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"},{"key":"ctrl+u","command":"extension.vim_ctrl+u","when":"editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"},{"key":"ctrl+u","command":"list.focusPageUp","when":"listFocus && !inputFocus"},{"key":"ctrl+v","command":"extension.vim_ctrl+v","when":"editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"},{"key":"ctrl+w","command":"extension.vim_ctrl+w","when":"editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"},{"key":"ctrl+x","command":"extension.vim_ctrl+x","when":"editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"},{"key":"ctrl+y","command":"extension.vim_ctrl+y","when":"editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"},{"key":"ctrl+z","command":"extension.vim_ctrl+z","when":"editorTextFocus && vim.active && vim.use<C-z> && !inDebugRepl"},{"key":"ctrl+6","command":"extension.vim_ctrl+6","when":"editorTextFocus && vim.active && vim.use<C-6> && !inDebugRepl"},{"key":"ctrl+^","command":"extension.vim_ctrl+^","when":"editorTextFocus && vim.active && vim.use<C-^> && !inDebugRepl"},{"key":"ctrl+[","command":"extension.vim_ctrl+[","when":"editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"},{"key":"ctrl+]","command":"extension.vim_ctrl+]","when":"editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"},{"key":"ctrl+shift+2","command":"extension.vim_ctrl+shift+2","when":"editorTextFocus && vim.active && vim.use<C-shift+2>"},{"key":"ctrl+up","command":"extension.vim_ctrl+up","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+down","command":"extension.vim_ctrl+down","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+left","command":"extension.vim_ctrl+left","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+right","command":"extension.vim_ctrl+right","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+pagedown","command":"extension.vim_ctrl+pagedown","when":"editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"},{"key":"ctrl+pageup","command":"extension.vim_ctrl+pageup","when":"editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"},{"key":"ctrl+space","command":"extension.vim_ctrl+space","when":"editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"shift+G","command":"list.focusLast","when":"listFocus && !inputFocus"},{"key":"ctrl+backspace","command":"extension.vim_ctrl+backspace","when":"editorTextFocus && vim.active && vim.use<C-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+backspace","command":"extension.vim_shift+backspace","when":"editorTextFocus && vim.active && vim.use<S-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"cmd+left","command":"extension.vim_cmd+left","when":"editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+right","command":"extension.vim_cmd+right","when":"editorTextFocus && vim.active && vim.use<D-right> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+a","command":"extension.vim_cmd+a","when":"editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+c","command":"extension.vim_cmd+c","when":"editorTextFocus && vim.active && vim.use<D-c> && vim.overrideCopy && !inDebugRepl"},{"key":"cmd+d","command":"extension.vim_cmd+d","when":"editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"},{"key":"cmd+v","command":"extension.vim_cmd+v","when":"editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'CommandlineInProgress' && !inDebugRepl || editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'SearchInProgressMode' && !inDebugRepl"},{"key":"ctrl+alt+down","linux":"shift+alt+down","mac":"cmd+alt+down","command":"extension.vim_cmd+alt+down","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"ctrl+alt+up","linux":"shift+alt+up","mac":"cmd+alt+up","command":"extension.vim_cmd+alt+up","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"j","command":"notebook.focusNextEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"},{"key":"k","command":"notebook.focusPreviousEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"}],"configuration":{"title":"Vim","type":"object","properties":{"vim.normalModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.normalModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.useCtrlKeys":{"type":"boolean","markdownDescription":"Enable some Vim Ctrl key commands that override otherwise common operations, like `Ctrl+C`.","default":true},"vim.leader":{"type":"string","markdownDescription":"What key should `<leader>` map to in remappings?","default":"\\"},"vim.searchHighlightColor":{"type":"string","markdownDescription":"Background color of non-current search matches. The color must not be opaque so as not to hide underlying decorations. Uses `#editor.findMatchHighlightColor#` from current theme if undefined."},"vim.searchHighlightTextColor":{"type":"string","markdownDescription":"Foreground color of non-current search matches."},"vim.searchMatchColor":{"type":"string","markdownDescription":"Background color of the current match. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.searchMatchTextColor":{"type":"string","markdownDescription":"Foreground color of the current match."},"vim.substitutionColor":{"type":"string","markdownDescription":"Background color of substituted text when `#editor.inccommand#` is enabled. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.substitutionTextColor":{"type":"string","markdownDescription":"Foreground color of substituted text when `#editor.inccommand#` is enabled."},"vim.highlightedyank.enable":{"type":"boolean","description":"Enable highlighting when yanking.","default":false},"vim.highlightedyank.color":{"type":"string","description":"Background color of yanked text. The color must not be opaque so as not to hide underlying decorations.","default":"rgba(250, 240, 170, 0.5)"},"vim.highlightedyank.textColor":{"type":"string","description":"Foreground color of yanked text."},"vim.highlightedyank.duration":{"type":"number","description":"Duration in milliseconds of the yank highlight.","default":200,"minimum":1},"vim.useSystemClipboard":{"type":"boolean","description":"Use system clipboard for unnamed register.","default":false},"vim.overrideCopy":{"type":"boolean","description":"Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working.","default":true},"vim.insertModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.insertModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.textwidth":{"type":"number","markdownDescription":"Width to word-wrap to when using `gq`.","default":80,"scope":"language-overridable","minimum":1},"vim.timeout":{"type":"number","description":"Timeout in milliseconds for remapped commands.","default":1000,"minimum":0},"vim.maxmapdepth":{"type":"number","description":"Maximum number of times a mapping is done without resulting in a character to be used.","default":1000,"minimum":0},"vim.scroll":{"type":"number","markdownDescription":"Number of lines to scroll with `Ctrl-U` and `Ctrl-D` commands. Set to 0 to use a half page scroll.","default":0,"minimum":0},"vim.showcmd":{"type":"boolean","description":"Show the text of any command you are in the middle of writing.","default":true},"vim.showmodename":{"type":"boolean","description":"Show the name of the current mode in the statusbar.","default":true},"vim.iskeyword":{"type":"string","markdownDescription":"Keywords contain alphanumeric characters and '_'. If not configured, `#editor.wordSeparators#` is used."},"vim.ignorecase":{"type":"boolean","description":"Ignore case in search patterns.","default":true},"vim.smartcase":{"type":"boolean","markdownDescription":"Override the `ignorecase` option if the search pattern contains upper case characters.","default":true},"vim.matchpairs":{"type":"string","markdownDescription":"Characters that form pairs. The % command jumps from one to the other. Only character pairs are allowed that are different, thus you cannot jump between two double quotes. The characters must be separated by a colon. The pairs must be separated by a comma.","default":"(:),{:},[:]"},"vim.camelCaseMotion.enable":{"type":"boolean","markdownDescription":"Enable the [CamelCaseMotion](https://github.com/bkad/CamelCaseMotion) plugin for Vim.","default":false},"vim.easymotion":{"type":"boolean","markdownDescription":"Enable the [EasyMotion](https://github.com/easymotion/vim-easymotion) plugin for Vim.","default":false},"vim.easymotionMarkerBackgroundColor":{"type":"string","default":"#0000","description":"Set a custom background color for EasyMotion markers."},"vim.easymotionMarkerForegroundColorOneChar":{"type":"string","default":"#ff0000","description":"Set a custom color for the text on one character long markers."},"vim.easymotionMarkerForegroundColorTwoCharFirst":{"type":"string","default":"#ffb400","description":"Set a custom color for the first character on two character long markers."},"vim.easymotionMarkerForegroundColorTwoCharSecond":{"type":"string","default":"#b98300","description":"Set a custom color for the second character on two character long markers."},"vim.easymotionIncSearchForegroundColor":{"type":"string","default":"#7fbf00","markdownDescription":"Set a custom color for the easymotion search n-character (default `<leader><leader>/`)."},"vim.easymotionDimColor":{"type":"string","default":"#777777","markdownDescription":"Set a custom color for the easymotion dimmed characters when `#vim.easymotionDimBackground#` is set to true."},"vim.easymotionDimBackground":{"type":"boolean","description":"Whether to dim other text while markers are visible.","default":true},"vim.easymotionMarkerFontWeight":{"type":"string","description":"Set the font weight of the marker text.","default":"bold"},"vim.easymotionKeys":{"type":"string","description":"Set the characters used for jump marker name.","default":"hklyuiopnm,qwertzxcvbasdgjf;"},"vim.easymotionJumpToAnywhereRegex":{"type":"string","description":"Regex matches for JumpToAnywhere motion.","default":"\\b[A-Za-z0-9]|[A-Za-z0-9]\\b|_.|#.|[a-z][A-Z]"},"vim.replaceWithRegister":{"type":"boolean","markdownDescription":"Enable the [ReplaceWithRegister](https://github.com/vim-scripts/ReplaceWithRegister) plugin for Vim.","default":false},"vim.smartRelativeLine":{"type":"boolean","markdownDescription":"`#editor.lineNumbers#` is determined by the active Vim mode, absolute when in insert mode, relative otherwise.","default":false},"vim.targets.enable":{"type":"boolean","markdownDescription":"Enable [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects) plugin (not fully implemented yet).","default":false},"vim.targets.bracketObjects.enable":{"type":"boolean","markdownDescription":"Enable last/next movements for bracket objects.","default":true},"vim.targets.smartQuotes.enable":{"type":"boolean","markdownDescription":"Enable the smart quotes movements from [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects).","default":true},"vim.targets.smartQuotes.breakThroughLines":{"type":"boolean","markdownDescription":"Whether to break through lines when using [n]ext/[l]ast motion, see [targets.vim#next-and-last-quote](https://github.com/wellle/targets.vim#next-and-last-quote).","default":true},"vim.targets.smartQuotes.aIncludesSurroundingSpaces":{"type":"boolean","markdownDescription":"Whether to use default Vim behavior when using `a` (e.g. `da'`) which include surrounding spaces, or not, as for other text objects.","default":true},"vim.sneak":{"type":"boolean","markdownDescription":"Enable the [Sneak](https://github.com/justinmk/vim-sneak) plugin for Vim.","default":false},"vim.sneakUseIgnorecaseAndSmartcase":{"type":"boolean","markdownDescription":"Case sensitivity is determined by `#vim.ignorecase#` and `#vim.smartcase#`.","default":false},"vim.sneakReplacesF":{"type":"boolean","markdownDescription":"Use single-character [Sneak](https://github.com/justinmk/vim-sneak) instead of Vim's native `f`.","default":false},"vim.surround":{"type":"boolean","markdownDescription":"Enable the [Surround](https://github.com/tpope/vim-surround) plugin for Vim.","default":true},"vim.argumentObjectSeparators":{"type":"array","items":{"type":"string"},"markdownDescription":"Set separators for the argument text object.","default":[","]},"vim.argumentObjectOpeningDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set opening delimiters for the argument text object.","default":["(","["]},"vim.argumentObjectClosingDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set closing delimiters for the argument text object.","default":[")","]"]},"vim.hlsearch":{"type":"boolean","description":"Show all matches of the most recent search pattern.","default":false},"vim.inccommand":{"type":"string","markdownDescription":"Show the effects of the `:substitute` command as you type.","default":"replace","enum":["","append","replace"],"enumDescriptions":["Don't show substitutions","Show substitutions after matched text","Replace matched text with substitutions"]},"vim.incsearch":{"type":"boolean","markdownDescription":"Show where a `/` or `?` search matches as you type it.","default":true},"vim.history":{"type":"number","description":"How much search or command history should be remembered.","default":50,"minimum":1},"vim.autoindent":{"type":"boolean","description":"Indent code automatically.","default":true},"vim.joinspaces":{"type":"boolean","description":"Add two spaces after '.', '?', and '!' when joining or reformatting.","default":true},"vim.startInInsertMode":{"type":"boolean","description":"Start in Insert mode."},"vim.handleKeys":{"type":"object","description":"Delegate certain key combinations back to VSCode to be handled natively.","default":{"<C-d>":true,"<C-s>":false,"<C-z>":false}},"vim.statusBarColorControl":{"type":"boolean","markdownDescription":"Allow VSCodeVim to change status bar color based on mode. **NOTE:** Using this feature will have a negative impact on performance.","default":false},"vim.statusBarColors.normal":{"type":["string","array"],"description":"Status bar color when in Normal mode.","default":"#005f5f"},"vim.statusBarColors.insert":{"type":["string","array"],"description":"Status bar color when in Insert mode.","default":"#5f0000"},"vim.statusBarColors.visual":{"type":["string","array"],"description":"Status bar color when in Visual mode.","default":"#5f00af"},"vim.statusBarColors.visualline":{"type":["string","array"],"description":"Status bar color when in VisualLine mode.","default":"#005f5f"},"vim.statusBarColors.visualblock":{"type":["string","array"],"description":"Status bar color when in VisualBlock mode.","default":"#86592d"},"vim.statusBarColors.replace":{"type":["string","array"],"description":"Status bar color when in Replace mode.","default":"#00000"},"vim.statusBarColors.commandlineinprogress":{"type":["string","array"],"description":"Status bar color when in CommandLineInProgress mode.","default":"#007acc"},"vim.statusBarColors.searchinprogressmode":{"type":["string","array"],"description":"Status bar color when in SearchInProgress mode.","default":"#007acc"},"vim.statusBarColors.easymotionmode":{"type":["string","array"],"description":"Status bar color when in EasyMotion mode.","default":"#007acc"},"vim.statusBarColors.easymotioninputmode":{"type":["string","array"],"description":"Status bar color when in EasyMotionInput mode.","default":"#007acc"},"vim.statusBarColors.surroundinputmode":{"type":["string","array"],"description":"Status bar color when in SurroundInput mode.","default":"#007acc"},"vim.visualstar":{"type":"boolean","markdownDescription":"In Visual mode, start a search with `*` or `#` using the current selection.","default":false},"vim.changeWordIncludesWhitespace":{"type":"boolean","description":"Includes trailing whitespace when changing word.","default":false},"vim.foldfix":{"type":"boolean","description":"Uses a hack to move around folds properly.","default":false},"vim.mouseSelectionGoesIntoVisualMode":{"type":"boolean","description":"If enabled, dragging with the mouse activates Visual mode.","default":true},"vim.disableExtension":{"type":"boolean","description":"Disables the VSCodeVim extension. The extension will continue to be loaded and activated, but Vim functionality will be disabled.","default":false},"vim.enableNeovim":{"type":"boolean","markdownDescription":"Use Neovim to execute Ex commands. You should restart VS Code after enabling/disabling this for the changes to take effect. **NOTE:** Neovim version 0.2.0 or greater must be installed, and if the executable is not on your PATH, `#vim.neovimPath#` must be set.","default":false},"vim.neovimPath":{"type":"string","markdownDescription":"Path to Neovim executable. For example, `/usr/bin/nvim`, or  `C:\\Program Files\\Neovim\\bin\\nvim.exe`.","default":"","scope":"machine"},"vim.neovimUseConfigFile":{"type":"boolean","markdownDescription":"Use a config file for Neovim, specified by `vim.neovimConfigPath`.","default":false},"vim.neovimConfigPath":{"type":"string","markdownDescription":"Path to Neovim configuration file. `vim.neovimUseConfigFile` must be enabled. If path is left blank, Neovim will use its default config path, i.e. `~/.config/nvim/init.vim` or 'C:\\Users\\USERNAME\\AppData\\Local\\nvim\\init.vim'.","default":"","scope":"machine"},"vim.vimrc.enable":{"type":"boolean","markdownDescription":"Use key mappings from a `.vimrc` file.","default":false},"vim.vimrc.path":{"type":"string","markdownDescription":"Path to a Vim configuration file. If unset, it will check for `$HOME/.vscodevimrc`, `$HOME/.vimrc`, `$HOME/_vimrc`, and `$HOME/.config/nvim/init.vim`, in that order."},"vim.substituteGlobalFlag":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false,"markdownDeprecationMessage":"**Deprecated**: Please use `#vim.gdefault#` instead.","deprecationMessage":"Deprecated: Please use vim.gdefault instead."},"vim.gdefault":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false},"vim.cursorStylePerMode.normal":{"type":"string","description":"Cursor style for Normal mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.insert":{"type":"string","description":"Cursor style for Insert mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.replace":{"type":"string","description":"Cursor style for Replace mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visual":{"type":"string","description":"Cursor style for Visual mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualline":{"type":"string","description":"Cursor style for VisualLine mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualblock":{"type":"string","description":"Cursor style for VisualBlock mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.autoSwitchInputMethod.enable":{"type":"boolean","description":"If enabled, the input method switches automatically when the mode changes.","default":false},"vim.autoSwitchInputMethod.defaultIM":{"type":"string","markdownDescription":"The input method for your normal mode, find more information [here](https://github.com/VSCodeVim/Vim#input-method).","default":"","scope":"machine"},"vim.autoSwitchInputMethod.switchIMCmd":{"type":"string","description":"The shell command to switch input method.","default":"/path/to/im-select {im}","scope":"machine"},"vim.autoSwitchInputMethod.obtainIMCmd":{"type":"string","description":"The shell command to get current input method.","default":"/path/to/im-select","scope":"machine"},"vim.whichwrap":{"type":"string","description":"Comma-separated list of motion keys that should wrap to next/previous line.","default":"b,s"},"vim.report":{"type":"number","description":"Threshold for reporting number of lines changed.","default":2,"minimum":1},"vim.digraphs":{"type":"object","description":"Custom digraph shortcuts for inserting special characters, expressed as UTF16 code points.","default":{}},"vim.wrapscan":{"type":"boolean","description":"Searches wrap around the end of the file.","default":true},"vim.startofline":{"type":"boolean","markdownDescription":"When `true` the commands listed below move the cursor to the first non-blank of the line.  When `false` the cursor is kept in the same column (if possible).  This applies to the commands: `<C-d>`, `<C-u>`, `<C-b>`, `<C-f>`, `G`, `H`, `M`, `L`, `gg`, and to the commands `d`, `<<` and `>>` with a linewise operator.","default":true},"vim.showMarksInGutter":{"type":"boolean","description":"Show the currently set mark(s) in the gutter.","default":false},"vim.shell":{"type":"string","description":"Path to the shell to use for `!` and `:!` commands.","default":""}}},"languages":[{"id":"vimrc","extensions":[".vimrc"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"vimrc","scopeName":"source.vimrc","path":"./syntaxes/vimrc.tmLanguage.json"}]},"scripts":{"vscode:prepublish":"gulp build","build":"gulp build","build-dev":"gulp build-dev","build-test":"gulp prepare-test","test":"node ./out/test/runTest.js","lint":"tslint --project .","lint:fix":"tslint --project . --fix","prettier":"prettier --write .","prettier:check":"prettier --check .","watch":"webpack -c webpack.dev.js --watch","package":"yarn run vsce package --yarn --allow-star-activation","prepare":"husky install"},"dependencies":{"diff-match-patch":"1.0.5","lodash":"^4.17.21","neovim":"4.10.1","os-browserify":"0.3.0","parsimmon":"^1.18.0","path-browserify":"1.0.1","process":"0.11.10","queue":"^6.0.2","untildify":"4.0.0","util":"0.12.5"},"devDependencies":{"@types/diff":"5.0.2","@types/diff-match-patch":"1.0.32","@types/glob":"8.1.0","@types/lodash":"4.14.191","@types/mocha":"10.0.1","@types/node":"16.18.13","@types/parsimmon":"1.10.6","@types/sinon":"10.0.13","@types/vscode":"1.74.0","@vscode/test-electron":"2.3.0","circular-dependency-plugin":"^5.2.2","clean-webpack-plugin":"4.0.0","event-stream":"4.0.1","fork-ts-checker-webpack-plugin":"7.3.0","gulp":"4.0.2","gulp-bump":"3.2.0","gulp-git":"2.10.1","gulp-tag-version":"1.3.1","gulp-typescript":"5.0.1","husky":"^8.0.3","lint-staged":"^13.1.2","minimist":"1.2.8","mocha":"10.2.0","plugin-error":"2.0.1","prettier":"2.8.4","sinon":"15.0.1","ts-loader":"9.4.2","tslint":"6.1.3","typescript":"4.9.5","vsce":"2.15.0","webpack":"5.75.0","webpack-cli":"5.0.1","webpack-merge":"5.8.0","webpack-stream":"7.0.0"},"lint-staged":{"*.{ts,js,json,md,yml}":"prettier --write","*.{ts}":"tslint --fix"}},"location":{"$mid":1,"path":"/home/arjuntina/.vscode-oss/extensions/vscodevim.vim-1.25.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"d96e79c6-8b25-4be3-8545-0e0ecefcae03","publisherId":"5d63889b-1b67-4b1f-8350-4f1dce041a26","publisherDisplayName":"vscodevim","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1692127001886},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ecmel.vscode-html-css","uuid":"aaee577c-f062-495a-9816-0cbd442f1d25"},"manifest":{"name":"vscode-html-css","displayName":"HTML CSS Support","description":"CSS Intellisense for HTML","version":"1.13.1","publisher":"ecmel","license":"MIT","homepage":"https://github.com/ecmel/vscode-html-css","bugs":"https://github.com/ecmel/vscode-html-css/issues","icon":"icon.png","sponsor":{"url":"https://github.com/sponsors/ecmel"},"repository":{"type":"git","url":"https://github.com/ecmel/vscode-html-css.git"},"engines":{"vscode":"^1.66.0"},"categories":["Programming Languages","Other"],"keywords":["css","html","twig","blade","django","nunjucks","mustache","angular","react","vue","multi-root ready"],"activationEvents":["*"],"contributes":{"configuration":{"title":"CSS Settings","properties":{"css.enabledLanguages":{"type":"array","scope":"application","description":"List of languages which suggestions are desired.","default":["html"]},"css.styleSheets":{"type":"array","scope":"resource","description":"List of local or remote style sheets for suggestions.","default":[]}}},"commands":[{"command":"vscode-html-css.validate","title":"CSS: Validate Attributes"},{"command":"vscode-html-css.dispose","title":"CSS: Clear Cache"}]},"main":"./dist/extension.js","scripts":{"vscode:prepublish":"npm run package","compile":"webpack","watch":"webpack --watch","package":"webpack --mode production --devtool hidden-source-map","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile && npm run lint","lint":"eslint src --ext ts","test":"node ./out/test/runTest.js","deploy":"vsce publish"},"devDependencies":{"@types/css-tree":"^1.0.7","@types/glob":"^7.2.0","@types/mocha":"^9.1.1","@types/node":"14.x","@types/node-fetch":"^2.5.8","@types/vscode":"^1.66.0","@typescript-eslint/eslint-plugin":"^5.21.0","@typescript-eslint/parser":"^5.21.0","@vscode/test-electron":"^2.1.3","css-tree":"^2.0.4","eslint":"^8.14.0","glob":"^8.0.1","mocha":"^9.2.2","node-fetch":"^2.6.1","ts-loader":"^9.2.8","typescript":"^4.6.4","vsce":"^2.9.1","webpack":"^5.70.0","webpack-cli":"^4.9.2"}},"location":{"$mid":1,"path":"/home/arjuntina/.vscode-oss/extensions/ecmel.vscode-html-css-1.13.1-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"aaee577c-f062-495a-9816-0cbd442f1d25","publisherId":"7aa35068-d7c4-4220-b9c1-10360795fd5f","publisherDisplayName":"ecmel","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1692127003675},"isValid":true,"validations":[]}]}